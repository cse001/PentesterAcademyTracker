Python for Pentesters%Module 1: Introduction to Python and Setting up an Environment  
Python for Pentesters%Module 1: Variables and Data Types   
Python for Pentesters%Module 1: Data Types: Tuple, Sets, Dictionaries  
Python for Pentesters%Module 1: Conditional Statements  
Python for Pentesters%Module 1: Functions  
Python for Pentesters%Module 1: Classes and Objects  
Python for Pentesters%Module 1: Creating Modules  
Python for Pentesters%Module 1: Creating Packages  
Python for Pentesters%Module 1: Exception Handling  
Python for Pentesters%Module 1: Python on other Devices  
Python for Pentesters%Module 2: File Handling  
Python for Pentesters%Module 2: Directory Navigation  
Python for Pentesters%Module 2: Process Creation  
Python for Pentesters%Module 2: Python Threads  
Python for Pentesters%Module 2: Threading and Queues  
Python for Pentesters%Module 2: Signals and IPC  
Python for Pentesters%Module 2: Subprocess  
Python for Pentesters%Module 3: Client - Server Programming Basics  
Python for Pentesters%Module 3: SocketServer Framework  
Python for Pentesters%Module 3: Creating a Web Server   
Python for Pentesters%Module 3: Packet Sniffing with Raw Sockets  
Python for Pentesters%Module 3: Packet Injection with Raw Sockets  
Python for Pentesters%Module 3: Packet Sniffing with Scapy  
Python for Pentesters%Module 3: Packet Injection with Scapy  
Python for Pentesters%Module 3: Programming with Scapy  
Python for Pentesters%Module 4: Fetching Web Pages  
Python for Pentesters%Module 4: Parsing HTML  
Python for Pentesters%Module 4: Coding a Screen Scraper  
Python for Pentesters%Module 4: Form Parsing and  Submission with Mechanize  
Python for Pentesters%Module 4: Stateful Web Application Browsing with Mechanize  
Python for Pentesters%Module 4: XML Parsing and Web Services  
Python for Pentesters%Module 4: Exercise Series 1  
Python for Pentesters%Module 4: OWASP Top 10 Attack Scripting Exercise  
Python for Pentesters%Module 5: Exploit Research Basics  
Python for Pentesters%Module 5: Immunity Debugger Basics  
Python for Pentesters%Module 5: Immunity Debugger Scripting Basics  
Python for Pentesters%Module 5: Processes in-Depth  
Python for Pentesters%Module 5: Assemble, Disassemble, Search and Locate Instructions  
Python for Pentesters%Module 5: PyHooks  
Python for Pentesters%Module 5: Exploiting a Buffer Overflow  
Python for Pentesters%Module 6: Portable Executable Basics  
Python for Pentesters%Module 6: PE Analysis with pefile  
Python for Pentesters%Module 6: Disassembling Code with Pydasm  
Python for Pentesters%Module 6: PyDbg  Basics  
Python for Pentesters%Module 6: Monitoring API Calls  
Python for Pentesters%Module 6: Malware Analysis with Sandbox  
Python for Pentesters%Module 7: Using pexpect  
Python for Pentesters%Module 7: SSH Automation with Paramiko  
Python for Pentesters%Module 7: SSH Dictionary Attack with Paramiko  
Python for Pentesters%Module 7: SFTP with Paramiko  
Python for Pentesters%Module 7: Automating Nmap  
Python for Pentesters%Where do we go from here?  
Attacking and Defending Active Directory%Course Introduction  
Attacking and Defending Active Directory%Domain Enumeration Part 1  
Attacking and Defending Active Directory%Domain Enumeration Part 2  
Attacking and Defending Active Directory%Domain Enumeration Part 3  
Attacking and Defending Active Directory%Domain Enumeration Part 4  
Attacking and Defending Active Directory%Local Privilege Escalation Part 1  
Attacking and Defending Active Directory%Local Privilege Escalation Part 2  
Attacking and Defending Active Directory%Domain Enumeration BloodHound  
Attacking and Defending Active Directory%Lateral Movement  
Attacking and Defending Active Directory%Domain Persistence Part 1  
Attacking and Defending Active Directory%Domain Persistence Part 2  
Attacking and Defending Active Directory%Domain Persistence Part 3  
Attacking and Defending Active Directory%Domain Persistence Part 4  
Attacking and Defending Active Directory%Domain Persistence Part 5  
Attacking and Defending Active Directory%Domain Privilege Escalation Kerberoast  
Attacking and Defending Active Directory%Domain Privilege Escalation: Unconstrained Delegation  
Attacking and Defending Active Directory%Domain Privilege Escalation: Constrained Delegation  
Attacking and Defending Active Directory%Domain Privilege Escalation: DNSAdmins  
Attacking and Defending Active Directory%Cross Forest Attacks  
Attacking and Defending Active Directory%Forest Persistence DCShadow  
Attacking and Defending Active Directory%Detection and Defense Part 1  
Attacking and Defending Active Directory%Detection and Defense Part 2  
Attacking and Defending Active Directory%Detection and Defense Part 3  
Attacking and Defending Active Directory%Detection and Defense Part 4  
Attacking and Defending Active Directory%Detection and Defense Part 5  
Attacking and Defending Active Directory%Walkthrough Objective 1-4  
Attacking and Defending Active Directory%Walkthrough Objective 5  
Attacking and Defending Active Directory%Walkthrough Objective 6  
Attacking and Defending Active Directory%Walkthrough Objective 7  
Attacking and Defending Active Directory%Walkthrough Objective 8-11  
Attacking and Defending Active Directory%Walkthrough Objective 12-13  
Attacking and Defending Active Directory%Walkthrough Objective 14-16  
Attacking and Defending Active Directory%Walkthrough Objective 17-18  
Attacking and Defending Active Directory%Walkthrough Objective 19-20  
Attacking and Defending Active Directory%Walkthrough Objective 21-22  
Attacking and Defending Active Directory%Walkthrough Objective 23  
Windows Process Injection for Red-Blue Teams%Course Introduction  
Windows Process Injection for Red-Blue Teams%Module 1: Process Fundamentals  
Windows Process Injection for Red-Blue Teams%Module 1: Virtual Memory  
Windows Process Injection for Red-Blue Teams%Module 2: Process Enumeration  
Windows Process Injection for Red-Blue Teams%Module 2: Toolhelp API  
Windows Process Injection for Red-Blue Teams%Module 2: WTSEnumerate  
Windows Process Injection for Red-Blue Teams%Module 2: EnumProcesses  
Windows Process Injection for Red-Blue Teams%Module 2: NTQuerySystemInformation  
Windows Process Injection for Red-Blue Teams%Module 3: Process Injection Introduction  
Windows Process Injection for Red-Blue Teams%Module 3: Remote Thread Injection  
Windows Process Injection for Red-Blue Teams%Module 3: APC Injection  
Windows Process Injection for Red-Blue Teams%Module 3: Thread Hijacking  
Windows Process Injection for Red-Blue Teams%Module 3: Windows Hooks  
Windows Process Injection for Red-Blue Teams%Module 3: Process Hollowing  
x86 Assembly Language and Shellcoding on Linux%Course Introduction  
x86 Assembly Language and Shellcoding on Linux%What is Assembly Language?  
x86 Assembly Language and Shellcoding on Linux%Setting up the Lab  
x86 Assembly Language and Shellcoding on Linux%Getting the CPU Info on Linux  
x86 Assembly Language and Shellcoding on Linux%IA-32 Architecture Basics  
x86 Assembly Language and Shellcoding on Linux%IA-32 Architecture Exercise  
x86 Assembly Language and Shellcoding on Linux%CPU Modes and Memory  
x86 Assembly Language and Shellcoding on Linux%Hello World in Assembly  
x86 Assembly Language and Shellcoding on Linux%Hello World GDB Exercise  
x86 Assembly Language and Shellcoding on Linux%Data Types  
x86 Assembly Language and Shellcoding on Linux%Moving Data  
x86 Assembly Language and Shellcoding on Linux%Understanding the Stack  
x86 Assembly Language and Shellcoding on Linux%Arithmetic Operations  
x86 Assembly Language and Shellcoding on Linux%Multiplication and Division  
x86 Assembly Language and Shellcoding on Linux%Logical Instructions  
x86 Assembly Language and Shellcoding on Linux%Control Instructions  
x86 Assembly Language and Shellcoding on Linux%Loop Exercise  
x86 Assembly Language and Shellcoding on Linux%Procedures  
x86 Assembly Language and Shellcoding on Linux%Saving CPU State  
x86 Assembly Language and Shellcoding on Linux%String in Assembly  
x86 Assembly Language and Shellcoding on Linux%Libc and NASM  
x86 Assembly Language and Shellcoding on Linux%Shellcode Basics  
x86 Assembly Language and Shellcoding on Linux%Writing Exit Shellcode  
x86 Assembly Language and Shellcoding on Linux%Hello World Shellcode using JMP-CALL-POP Technique  
x86 Assembly Language and Shellcoding on Linux%Hello World Shellcode Stack Technique  
x86 Assembly Language and Shellcoding on Linux%Execve JMP-CALL-POP  
x86 Assembly Language and Shellcoding on Linux%Execve Shellcode Stack Technique  
x86 Assembly Language and Shellcoding on Linux%XOR Encoder and Decoder  
x86 Assembly Language and Shellcoding on Linux%Using Metasploit's Encoders  
x86 Assembly Language and Shellcoding on Linux%Simple NOT Encoder  
x86 Assembly Language and Shellcoding on Linux%Insertion Encoder  
x86 Assembly Language and Shellcoding on Linux%XOR Encoder Decoder using MMX Registers  
x86 Assembly Language and Shellcoding on Linux%Polymorphism  
x86 Assembly Language and Shellcoding on Linux%Analyzing 3rd Party Shellcode  
x86 Assembly Language and Shellcoding on Linux%Analyzing Shellcode with Libemu  
x86 Assembly Language and Shellcoding on Linux%Writing Custom Crypters  
x86 Assembly Language and Shellcoding on Linux%SLAE Exam Format  
x86_64 Assembly Language and Shellcoding on Linux%Course Introduction  
x86_64 Assembly Language and Shellcoding on Linux%Course Lab Setup  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: What is Assembly Language?  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: CPU Information  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: GDB Test Solution  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: CPU Registers  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Hello World in 64-bit Assembly  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Hello World runtime analysis with GDB  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Reducing Instruction Size and Removing Nulls  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Data Types  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Endianess  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: GDB TUI Mode  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Moving Data  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: The Stack  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Arithmetic Operations  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Logical Operations  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Bit-Shifting Operations  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Control Operations  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Looping  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Load, Store and Move Strings  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Scan and Compare Strings  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Procedures  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Shellcoding Basics  
x86_64 Assembly Language and Shellcoding on Linux%Module 1: Stack Frames and Procedures  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Exit Shellcode  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: HelloWorld Shellcode JMP-CALL-POP Technique  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: HelloWorld Shellcode JMP-CALL-POP GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: HelloWorld Shellcode Stack Technique  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: HelloWorld Shellcode Stack Technique GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: RIP Relative Addressing  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: RIP Relative Addressing HelloWorld Shellcode  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Execve Shellcode Stack Method  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Execve Shellcode Stack Method GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Execve JMP-CALL-POP Shellcode  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Execve JMP-CALL-POP Shellcode GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: XOR Encoder  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: XOR Encoder GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: NOT Encoder  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: NOT Encoder GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Insertion Encoder  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Insertion Encoder GDB Analysis  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Metasploit Payloads  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Custom Payload with Metasploit Encoders  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: MMX XOR Decoder  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Polymorphism  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Crypter  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Chaining Encoders and Crypters  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: TCP Bind Shell I  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: TCP Bind Shell II  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: TCP Reverse Shell  
x86_64 Assembly Language and Shellcoding on Linux%Module 2: Exam Format  
Javascript for Pentesters%Task 1: Modify HTML with Javascript  
Javascript for Pentesters%Task 1 Solution: Modify HTML with Javascript  
Javascript for Pentesters%Task 2: Change All Links  
Javascript for Pentesters%Task 2 Solution: Change All Links  
Javascript for Pentesters%Task 3: Hijack Form Submit  
Javascript for Pentesters%Task 3 Solution: Hijack Form Submit  
Javascript for Pentesters%Task 4: Modify Form Fields  
Javascript for Pentesters%Task 4 Solution: Modify Form Fields  
Javascript for Pentesters%Task 5: Social Engineering  
Javascript for Pentesters%Task 5 Solution: Social Engineering  
Javascript for Pentesters%Task 6: Capture All Clicks  
Javascript for Pentesters%Task 6 Solution: Capture All Clicks  
Javascript for Pentesters%Task 7: Keystroke Logging  
Javascript for Pentesters%Task 7 Solution: Keystroke Logging  
Javascript for Pentesters%Task 8: Event Listener  
Javascript for Pentesters%Task 8 Solution: Event Listener  
Javascript for Pentesters%Task 9: Include External JS  
Javascript for Pentesters%Task 10: Include External JS using JS  
Javascript for Pentesters%Task 11: Replace Banner Image  
Javascript for Pentesters%Task 12: Stealing from Auto-Complete  
Javascript for Pentesters%Task 13: Posting with XMLHttpRequest  
Javascript for Pentesters%Task 14: Fetching Data with XMLHttpRequest  
Javascript for Pentesters%Task 15: Data Exfiltration with XMLHttpRequest  
Javascript for Pentesters%Task 9 Solution: Include External JS  
Javascript for Pentesters%Task 10 Solution: Include External JS using JS  
Javascript for Pentesters%Task 11 Solution: Replace Banner Image  
Javascript for Pentesters%Task 12 Solution: Stealing from Auto-Complete  
Javascript for Pentesters%Task 13 Solution: Posting with XMLHttpRequest  
Javascript for Pentesters%Task 14 Solution: Fetching Data with XMLHttpRequest  
Javascript for Pentesters%Task 15 Solution: Data Exfiltration with XMLHttpRequest  
Javascript for Pentesters%Task 16: Extracting CSRF Tokens  
Javascript for Pentesters%Task 17: CSRF Token Stealing  
Javascript for Pentesters%Task 18: HTML Parsing of XMLHttpRequest Response  
Javascript for Pentesters%Task 16 Solution: Extracting CSRF Tokens  
Javascript for Pentesters%Task 17 Solution: CSRF Token Stealing  
Javascript for Pentesters%Task 18 Solution: HTML Parsing of XMLHttpRequest Response  
Javascript for Pentesters%Task 19: Multi-Level HTML Parsing  
Javascript for Pentesters%Task 20: Multi-Level JSON Parsing  
Javascript for Pentesters%Task 21: Multi-Level XML Parsing  
Javascript for Pentesters%Task 19 Solution: Multi-Level HTML Parsing  
Javascript for Pentesters%Task 20 Solution: Multi-Level JSON Parsing  
Javascript for Pentesters%Task 21 Solution: Multi-Level XML Parsing  
Linux Forensics%Course Introduction  
Linux Forensics%Forensic Basics: Introduction  
Linux Forensics%Forensic Basics: First Steps  
Linux Forensics%Creating a Linux Forensics USB Drive Part 1  
Linux Forensics%Creating a Linux Forensics USB Drive Part 2  
Linux Forensics%Starting an Investigation Part 1  
Linux Forensics%Starting an Investigation Part 2: Netcat  
Linux Forensics%Starting an Investigation Part 3: Server Scripts  
Linux Forensics%Starting an Investigation Part 4: Client Scripts  
Linux Forensics%Starting an Investigation Part 5: Running Scripts  
Linux Forensics%Starting an Investigation Part 6: What to Collect?  
Linux Forensics%Starting an Investigation Part 7: Collecting Initial Data  
Linux Forensics%Starting an Investigation Part 8: Analyzing the Log  
Linux Forensics%Live Analysis Part 1: First Steps  
Linux Forensics%Live Analysis Part 2: Memory Acquisition Basics  
Linux Forensics%Live Analysis Part 3: Compiling LiME  
Linux Forensics%Live Analysis Part 4: Dumping RAM with LiME  
Linux Forensics%Shutting down the subject system  
Linux Forensics%Making Filesystem Images  
Linux Forensics%Making Filesystem Images (contd.)  
Linux Forensics%Software Write Blocking with udev Rules  
Linux Forensics%Creating an Image from a Physical Drive  
Linux Forensics%Mounting Images: MBR Basics  
Linux Forensics%Mounting Images: MBR Basics part 2  
Linux Forensics%Mounting Images: Extended Partitions  
Linux Forensics%Mounting Images: Mounting Extended Partitions with Python  
Linux Forensics%Mounting Images: GUID Partitions  
Linux Forensics%Mounting Images: GUID Partitions with Python  
Linux Forensics%Mounting Images: Building a timeline as a CSV  
Linux Forensics%Mounting Images: Building a timeline as a CSV part 2  
Linux Forensics%Mounting Images: Creating a MySQL database with file metadata  
Linux Forensics%Mounting Images: Importing passwd and group files into Database  
Linux Forensics%Mounting Images: Creating a timeline in the Database  
Linux Forensics%Mounting Images: Examining the Timeline  
Linux Forensics%Mounting Images: Extracting user Bash History files  
Linux Forensics%Mounting Images: Examining user Bash History Files  
Linux Forensics%Mounting Images: Extracting System Logs  
Linux Forensics%Mounting Images: Examining System Logs  
Linux Forensics%Mounting Images: Extracting Login Information  
Linux Forensics%Mounting Images: Examining Login Information  
Linux Forensics%Filesystem Analysis: EXT Filesystem Basics  
Linux Forensics%Filesystem Analysis: Superblocks  
Linux Forensics%Filesystem Analysis: EXT Filesystem Compatible Features  
Linux Forensics%Filesystem Analysis: EXT Filesystem In-Compatible Features  
Linux Forensics%Filesystem Analysis: EXT filesystem Read-Only Compatible Features  
Linux Forensics%Filesystem Forensics: Reading the Superblock with Python  
Linux Forensics%Filesystem Analysis: Reading the Block Group Descriptors with Python  
Linux Forensics%Filesystem Analysis: Combining Superblock and Group Descriptor Information  
Linux Forensics%Filesystem Analysis: Running our Final Script  
Linux Forensics%Inodes: Finding things that are out of place  
Linux Forensics%Inodes: Using Python to find out of place Inodes  
Linux Forensics%Inodes: Digging Deeper  
Linux Forensics%Inodes: using builtin tools and the Sleuth Kit  
Linux Forensics%Inodes: Extensions and Details  
Linux Forensics%Inodes: From Inode to File  
Linux Forensics%Inodes: adding support for Extents for our Python Scripts  
Linux Forensics%Inodes: Connecting Inodes to file and directory entries  
Linux Forensics%Extending Python code to cat files using Inode Numbers  
Linux Forensics%Inodes: using Python to read directories from Inode numbers  
Linux Forensics%Inodes and extended Attributes  
Linux Forensics%Inodes: Using Python to read extended attributes from an Image  
Linux Forensics%Memory Analysis Part 1: Building a Volatility Profile  
Linux Forensics%Memory Analysis Part 2: Getting Process Information with Volatility  
Linux Forensics%Memory Analysis Part 3: More about Processes  
Linux Forensics%Memory Analysis Part 4: Process Maps and Dumps  
Linux Forensics%Memory Analysis Part 5: Getting Base Information from Volatility  
Linux Forensics%Memory Analysis Part 6: Using Volatility Check Plugins  
Linux Forensics%Memory Analysis Part 7: Getting Network Information  
Linux Forensics%Memory Analysis Part 8: Getting Filesystem Information with Volatility  
Linux Forensics%Memory Analysis Part 9: More Filesystem Information  
Linux Forensics%Introducing a more Advanced Attack  
Linux Forensics%Running Scripts against our Second Subject  
Linux Forensics%Analysis Results of running initial Scan  
Linux Forensics%Banner Grabbing the Second Subject  
Linux Forensics%Using Volatility Process Listing Commands on Pas2  
Linux Forensics%Digging Deeper into Suspicious Processes  
Linux Forensics%Using Volatility to create process maps  
Linux Forensics%Examining Bash Histories  
Linux Forensics%Using Volatility Check Functions  
Linux Forensics%Using Volatility Networking Functions  
Linux Forensics%Using Volatility Filesystem Functions  
Linux Forensics%Filesystem Analysis Part 1: Webserver Logs  
Linux Forensics%Filesystem Analysis Part 2: Webserver Vulnerabilities  
Linux Forensics%Filesystem Analysis Part 3: MySQL Logs  
Linux Forensics%Filesystem Analysis Part 4: Hidden Directories  
Linux Forensics%Filesystem Analysis Part 5: Creating a Timeline  
Linux Forensics%Filesystem Analysis Part 6: Web Payloads  
Linux Forensics%Filesystem Analysis Part 7: Packet Captures  
Linux Forensics%Filesystem Analysis Part 8: Login  
Linux Forensics%Malware Part 1: the File Command  
Linux Forensics%Malware Part 2: is it a known file?  
Linux Forensics%Malware Part 3: using Strings  
Linux Forensics%Malware Part 4: using NM  
Linux Forensics%Malware Part 5: using LDD  
Linux Forensics%Malware Part 6: Intro into ELF  
Linux Forensics%Malware Part 7: More fun with Readelf  
Linux Forensics%Malware Part 8: Looking into Program Sections and Segments  
Linux Forensics%Malware Part 9: Setting up a Sandbox  
Linux Forensics%Malware Part 10: Strace  
Linux Forensics%Malware Part 11: Ltrace  
Linux Forensics%Malware Part 12: GDB Disassembly  
Linux Forensics%Malware Part 13: GDB Info Functions  
Linux Forensics%Malware Part 14: Running xingyi_bindshell in GDB  
Linux Forensics%Malware Part 15: Running xingyi_bindshell in GDB  
Linux Forensics%Malware Part 16: Obfuscation  
Linux Forensics%The Road Ahead  
Pentesting with Metasploit%Exploitation Basics  
Pentesting with Metasploit%Why Metasploit?  
Pentesting with Metasploit%Meterpreter Basics  
Pentesting with Metasploit%Framework Organization  
Pentesting with Metasploit%Post-Exploitation Kung-Fu  
Pentesting with Metasploit%Post Exploitation Privilege Escalation  
Pentesting with Metasploit%Post-Exploitation Kill AV and Firewall  
Pentesting with Metasploit%Post-Exploitation: Stdapi and Priv Extensions  
Pentesting with Metasploit%Post-Exploitation: Token Stealing and Incognito  
Pentesting with Metasploit%Post-Exploitation: Espia and Sniffer Extensions  
Pentesting with Metasploit%Post-Exploitation: Backdoors  
Pentesting with Metasploit%Post-Exploitation: Pivoting  
Pentesting with Metasploit%Post-Exploitation: Port Forwarding  
Pentesting with Metasploit%Client side Exploits  
Pentesting with Metasploit%Backdoor Executables  
Pentesting with Metasploit%Exploit Research with Metasploit  
Pentesting with Metasploit%Railgun Basics  
Pentesting with Metasploit%Railgun: Adding Functions  
Pentesting with Metasploit%Railgun: Adding New DLLs  
Pentesting with Metasploit%Railgun: Adding New DLLs contd.  
Pentesting with Metasploit%Resource Scripts  
Pentesting with Metasploit%Database Support  
Pentesting with Metasploit%Using Plugins  
Pentesting with Metasploit%Meterpreter API Basics  
Pentesting with Metasploit%Meterpreter Scripting: Migrate Clone  
Pentesting with Metasploit%Meterpreter Scripting: Process Name Search  
Pentesting with Metasploit%Social Engineering Toolkit  
Wi-Fi Security and Pentesting%Getting Started  
Wi-Fi Security and Pentesting%Bands, Channels and Sniffing  
Wi-Fi Security and Pentesting%Pwning Beacon Frames  
Wi-Fi Security and Pentesting%Dissecting AP-Client Communication  
Wi-Fi Security and Pentesting%Dissecting WLAN Headers  
Wi-Fi Security and Pentesting%Pwning Hidden SSIDs  
Wi-Fi Security and Pentesting%Laughing Off MAC Filters  
Wi-Fi Security and Pentesting%Hacking WLAN Authentication  
Wi-Fi Security and Pentesting%Hotspot Attacks  
Wi-Fi Security and Pentesting%Hacking Isolated Clients  
Wi-Fi Security and Pentesting%ALFA Card King-Fu  
Wi-Fi Security and Pentesting%Man in the Middle Attacks  
Wi-Fi Security and Pentesting%SSL Man in the Middle Attacks  
Wi-Fi Security and Pentesting%WEP In-Depth  
Wi-Fi Security and Pentesting%WEP Cracking  
Wi-Fi Security and Pentesting%Caffe Latte Attack Basics  
Wi-Fi Security and Pentesting%Caffe Latte Attack Demo  
Wi-Fi Security and Pentesting%KoreK's Chop Chop Attack  
Wi-Fi Security and Pentesting%Fragmentation and Hirte Attack  
Wi-Fi Security and Pentesting%Understanding WPA/WPA2  
Wi-Fi Security and Pentesting%WPA-PSK  
Wi-Fi Security and Pentesting%WPA-PSK Cracking  
Wi-Fi Security and Pentesting%WPA2-PSK Cracking  
Wi-Fi Security and Pentesting%Speeding up WPA/WPA2-PSK Cracking  
Wi-Fi Security and Pentesting%Mood Swings of a Wandering Wi-Fi Client  
Wi-Fi Security and Pentesting%Cracking WPA/WPA2-PSK with just a Client  
Wi-Fi Security and Pentesting%Debugging Questions  
Wi-Fi Security and Pentesting%WPA Supplicant  
Wi-Fi Security and Pentesting%Setting up FreeRadius-WPE  
Wi-Fi Security and Pentesting%EAP-MD5 Basics and Demo  
Wi-Fi Security and Pentesting%Cracking EAP-MD5 with Eapmd5pass  
Wi-Fi Security and Pentesting%EAP Types and PEAP Demo  
Wi-Fi Security and Pentesting%Cracking PEAP  
Wi-Fi Security and Pentesting%Cracking PEAP in a Windows Network  
Wi-Fi Security and Pentesting%Cracking EAP-TTLS  
Wi-Fi Security and Pentesting%Insecurity in 3rd Party Wi-Fi Utilities  
Wi-Fi Security and Pentesting%Conclusion and Road Ahead  
Wi-Fi Security and Pentesting%Windows Wireless Kung-Fu  
Wi-Fi Security and Pentesting%Creating Wireless Backdoors  
Wi-Fi Security and Pentesting%Malware, Metasploit and the Hosted Network  
Wi-Fi Security and Pentesting%Wi-Fi Challenge 1  
Wi-Fi Security and Pentesting%Wi-Fi Challenge 2  
Wi-Fi Security and Pentesting%Wi-Fi Challenge 3  
Wi-Fi Security and Pentesting%Detecting AP Spoofing Attacks  
Wi-Fi Security and Pentesting%Detecting AP MAC Spoofing  
Wi-Fi Security and Pentesting%Beating Wireless IDS/IPS with Multipots  
Wi-Fi Security and Pentesting%Malicious SSID: HTML Injection and XSS  
Wi-Fi Security and Pentesting%Malicious SSID: SQL Injection  
Wi-Fi Security and Pentesting%Malicious SSID: CSRF  
Wi-Fi Security and Pentesting%Hostapd Basics  
Wi-Fi Security and Pentesting%Hostapd with DCHP and Webserver  
Wi-Fi Security and Pentesting%Hostapd: WEP AP  
Wi-Fi Security and Pentesting%Hostapd: WPA/WPA2 PSK AP  
Wi-Fi Security and Pentesting%Hostapd: Multiple APs on same Wi-Fi card  
Wi-Fi Security and Pentesting%Hostapd: WPA Enterprise Honeypot  
Wi-Fi Security and Pentesting%Airgraph-NG  
Wi-Fi Security and Pentesting%Airtun-NG  
Wi-Fi Security and Pentesting%Windows Wi-Fi API Introduction  
Wi-Fi Security and Pentesting%Windows Wi-Fi API: Scanner  
Wi-Fi Security and Pentesting%Enhanced Wi-Fi Scanner: Design  
Wi-Fi Security and Pentesting%Enhanced Wi-Fi Scanner: Demo  
Wi-Fi Security and Pentesting%Client Disconnect: Demo  
Wi-Fi Security and Pentesting%Understanding Wi-Fi Event Logs on Windows  
Wi-Fi Security and Pentesting%Understanding Wi-Fi Event Logs on Windows Part 2  
Wi-Fi Security and Pentesting%Understanding Wi-Fi Event Logs on Windows Part 3  
Wi-Fi Security and Pentesting%Wpa_supplicant & Wpa_Cli Basics  
Wi-Fi Security and Pentesting%Wpa_cli: Unencrypted Network  
Wi-Fi Security and Pentesting%Wpa_cli: WEP Network  
Wi-Fi Security and Pentesting%Wpa_cli: WPA-PSK Network  
Wi-Fi Security and Pentesting%Wpa_cli: WPA2-PSK Network  
Wi-Fi Security and Pentesting%WPA_Supplicant Deep Dive  
Wi-Fi Security and Pentesting%WPA_Supplicant All Networks  
Wi-Fi Security and Pentesting%WPA_Supplicant Wpa_cli WPS  
Wi-Fi Security and Pentesting%WPA_Supplicant Logging Levels  
Wi-Fi Security and Pentesting%WPA_Supplicant Multiple Cards  
Wi-Fi Security and Pentesting%WPA_Supplicant WPA2 Enterprise PEAP  
Wi-Fi Security and Pentesting%WPA_Supplicant WPA2 Enterprise TTLS  
Exploiting Simple Buffer Overflows on Win32%Course Introduction  
Exploiting Simple Buffer Overflows on Win32%The Stack  
Exploiting Simple Buffer Overflows on Win32%Stack - Winding and Unwinding  
Exploiting Simple Buffer Overflows on Win32%Tampering with the Return Address  
Exploiting Simple Buffer Overflows on Win32%Return to Shellcode  
Exploiting Simple Buffer Overflows on Win32%Overwriting the Stack  
Exploiting Simple Buffer Overflows on Win32%Overwriting the Stack Remotely  
Exploiting Simple Buffer Overflows on Win32%Calculating the Location of RET Overwrite   
Exploiting Simple Buffer Overflows on Win32%RET Control to Code Execution   
Exploiting Simple Buffer Overflows on Win32%Exploit to Meterpreter  
Exploiting Simple Buffer Overflows on Win32%Exploiting Echo Server v2  
Exploiting Simple Buffer Overflows on Win32%Exploiting Echo Server v3 Part 1  
Exploiting Simple Buffer Overflows on Win32%Exploiting Echo Server v3 Part 2  
Exploiting Simple Buffer Overflows on Win32%Bad Characters  
Exploiting Simple Buffer Overflows on Win32%Strcpy Bad Character  
Exploiting Simple Buffer Overflows on Win32%JMP ESP Technique  
Exploiting Simple Buffer Overflows on Win32%Bad Character Hunting: MicroP  
Exploiting Simple Buffer Overflows on Win32%JMP/CALL EAX Technique  
Exploiting Simple Buffer Overflows on Win32%Exploiting DVD Professional  
Exploiting Simple Buffer Overflows on Win32%Exploiting DVD Professional Part 2  
Exploiting Simple Buffer Overflows on Win32%Exploiting Digital TV Player Part 1  
Exploiting Simple Buffer Overflows on Win32%Exploiting Digital TV Player Part 2  
Exploiting Simple Buffer Overflows on Win32%Exploiting a File Sharing Server Part 1  
Exploiting Simple Buffer Overflows on Win32%Exploiting a File Sharing Server Part 2  
Exploiting Simple Buffer Overflows on Win32%Exploiting an SSH Server Part 1  
Exploiting Simple Buffer Overflows on Win32%Exploiting an SSH Server Part 2  
Exploiting Simple Buffer Overflows on Win32%Exploiting an FTP Server Part 1  
Exploiting Simple Buffer Overflows on Win32%Exploiting an FTP Server Part 2  
Exploiting Simple Buffer Overflows on Win32%Automating Bad Character Detection  
Exploiting Simple Buffer Overflows on Win32%Course Conclusion  
USB Forensics and Pentesting%Course Introduction  
USB Forensics and Pentesting%USB Basics: History  
USB Forensics and Pentesting%USB Basics: Device Connecting  
USB Forensics and Pentesting%USB Basics: Descriptors  
USB Forensics and Pentesting%USB Basics: Descriptors Demo  
USB Forensics and Pentesting%USB Basics: Endpoints  
USB Forensics and Pentesting%USB Basics: Device Classes and Commands  
USB Forensics and Pentesting%USB Challenge 1  
USB Forensics and Pentesting%USB Challenge 1: Answers  
USB Forensics and Pentesting%USB Hosts and Hubs  
USB Forensics and Pentesting%USB Mass Storage: Descriptors and Endpoints  
USB Forensics and Pentesting%USB Mass Storage: Presentation  
USB Forensics and Pentesting%USB Mass Storage: Communication  
USB Forensics and Pentesting%USB Mass Storage: Communication Part 2  
USB Forensics and Pentesting%USB Mass Storage: Windows  
USB Forensics and Pentesting%Duplication: Introduction to Vinculum 2  
USB Forensics and Pentesting%Duplication: Simple Duplicator  
USB Forensics and Pentesting%Duplication: Simple Duplicator - Connecting, Reading and Writing  
USB Forensics and Pentesting%Duplication: Blinking LEDs  
USB Forensics and Pentesting%Duplication: Adding LEDs  
USB Forensics and Pentesting%Duplication: Uploading Programs  
USB Forensics and Pentesting%Duplication: Improving Performance  
USB Forensics and Pentesting%Duplication: LCD Displays  
USB Forensics and Pentesting%Duplication: LCD Displays Part 2  
USB Forensics and Pentesting%Write Blocking  
USB Forensics and Pentesting%Write Blocking: Linux Demo  
USB Forensics and Pentesting%Write Blocking: Linux Demo Part 2  
USB Forensics and Pentesting%Hardware Write Blocking Part 1  
USB Forensics and Pentesting%Hardware Write Blocking Part 2: Threads and Helpers  
USB Forensics and Pentesting%Hardware Write Blocking Part 3: Host Enumeration  
USB Forensics and Pentesting%Hardware Write Blocking Part 4: USBMS Emulation  
USB Forensics and Pentesting%Hardware Write Blocking Part 5: Demo  
USB Forensics and Pentesting%USB Mass Storage Impersonation Part 1  
USB Forensics and Pentesting%USB Mass Storage Impersonation Part 2  
USB Forensics and Pentesting%USB Mass Storage Impersonation Part 3  
USB Forensics and Pentesting%Dealing with Windows only Devices  
USB Forensics and Pentesting%Human Interface Devices Overview  
USB Forensics and Pentesting%HID Descriptors and Reports  
USB Forensics and Pentesting%USB Challenge 2 - HID Devices  
USB Forensics and Pentesting%USB Challenge 2 - Solution  
Pentesting iOS Applications%Module 1: Introduction to iOS  
Pentesting iOS Applications%Module 1: iOS Application Basics  
Pentesting iOS Applications%Module 1: MVC and Event Driven Architecture  
Pentesting iOS Applications%Module 1: ARM Processor  
Pentesting iOS Applications%Module 1: iOS Security Mechanisms  
Pentesting iOS Applications%Module 2: Jailbreaking  
Pentesting iOS Applications%Module 2: Jailbreaking Demo  
Pentesting iOS Applications%Module 2: Creating a Pentest Platform  
Pentesting iOS Applications%Module 2: Sqlite Databases  
Pentesting iOS Applications%Module 2: Plist Files  
Pentesting iOS Applications%Module 2: Class-Dump-Z  
Pentesting iOS Applications%Module 3: Runtime Analysis with Cycript  
Pentesting iOS Applications%Module 3: Cycript and Class-dump-z  
Pentesting iOS Applications%Module 3: Cycript Tips and Tricks  
Pentesting iOS Applications%Module 3: Decrypting Applications  
Pentesting iOS Applications%Module 3: Runtime Analysis with GDB  
Pentesting iOS Applications%Module 4: Installing Challenge Apps  
Pentesting iOS Applications%Module 4: Data Storage and Security  
Pentesting iOS Applications%Module 4: NSUserDefaults  
Pentesting iOS Applications%Module 4: Sqlite Data Files  
Pentesting iOS Applications%Module 4: Core Data Services  
Pentesting iOS Applications%Module 4: Keychain  
Pentesting iOS Applications%Module 4: Cached Copy  
Pentesting iOS Applications%Module 4: Monitoring Network Communication  
Pentesting iOS Applications%Module 4: Intercepting SSL Traffic  
Pentesting iOS Applications%Module 4: Other Attacks  
Pentesting iOS Applications%Module 4: Anti-Piracy  
Pentesting iOS Applications%Module 4: Anti-Anti Piracy with GDB  
Pentesting iOS Applications%Module 4: Anti-Anti Piracy with GDB Level 2  
Pentesting iOS Applications%Module 4: Mobile Substrate  
Pentesting iOS Applications%Module 5: iOS Forensics Basics  
Pentesting iOS Applications%Module 5: iPhone Data Protection Tools  
Pentesting iOS Applications%Module 5: Exploring the Dumped Image  
Pentesting iOS Applications%Module 5: Bruteforcing the Passcode  
Pentesting iOS Applications%Module 5: Interesting Files  
Pentesting iOS Applications%Module 5: Analyzing iTunes Backup  
Pentesting iOS Applications%Module 6: iOS Malware  
Pentesting iOS Applications%Module 6: Metasploit Bind Shell on iOS  
Pentesting iOS Applications%Module 6: Metasploit Reverse TCP on iOS  
Pentesting iOS Applications%Module 6: Daemons and Backdoors  
Pentesting iOS Applications%Module 7: Conclusion and Further Direction  
Pentesting iOS Applications%Addendum: iOS 8.1 Jailbreak  
Pentesting iOS Applications%Addendum: Installing Apps from Cydia on iOS8  
Pentesting iOS Applications%Addendum: Installing Course Applications on iOS8  
Pentesting iOS Applications%Addendum: Installing Clutch, GDB, Class-Dump on iOS8  
Pentesting iOS Applications%Decrypting Applications and Class Dumping on iOS8  
Make your own Hacker Gadget%WiDy: Motivation and Goal  
Make your own Hacker Gadget%Flashing OpenWrt on TL-MR3020  
Make your own Hacker Gadget%Connecting to the Network  
Make your own Hacker Gadget%Installing USB Support  
Make your own Hacker Gadget%Creating Extroot on the USB Drive  
Make your own Hacker Gadget%Installing Wireless Pentest Tools  
Make your own Hacker Gadget%Installing Python and Scapy  
Make your own Hacker Gadget%Accessing Serial Port - Unboxing  
Make your own Hacker Gadget%Access Bootloader over Serial Interface  
Make your own Hacker Gadget%Vendor Firmware Analysis with Binwalk  
Make your own Hacker Gadget%Firmware Extraction with Binwalk  
Make your own Hacker Gadget%Firmware Rebuilding with the Firmware Mod Kit  
Make your own Hacker Gadget%Adding a Bind Shell using the Firmware Mod Kit  
Make your own Hacker Gadget%Adding a Sniffer with the Firmware Mod Kit  
Scripting Wi-Fi Pentesting Tools in Python%Scapy Basics  
Scripting Wi-Fi Pentesting Tools in Python%Packet Handlers in Scapy  
Scripting Wi-Fi Pentesting Tools in Python%Understanding Layers in Scapy  
Scripting Wi-Fi Pentesting Tools in Python%Finding All Wi-Fi Devices  
Scripting Wi-Fi Pentesting Tools in Python%SSID Finder  
Scripting Wi-Fi Pentesting Tools in Python%Client Probes  
Scripting Wi-Fi Pentesting Tools in Python%Scapy: Uncovering Hidden SSIDs  
Scripting Wi-Fi Pentesting Tools in Python%Scapy: Beating Hidden SSID Detection   
Scripting Wi-Fi Pentesting Tools in Python%Dictionary Attack on Hidden SSID Networks  
Scripting Wi-Fi Pentesting Tools in Python%Scapy: From Air to Sqlite Database  
Scripting Wi-Fi Pentesting Tools in Python% Airodump Output to Sqlite DB  
Scripting Wi-Fi Pentesting Tools in Python%Scapy: Deauthentication Attack  
Scripting Wi-Fi Pentesting Tools in Python%Scapy: Fake AP Beacons  
GNU Debugger Megaprimer%Course Introduction and Debugging Basics   
GNU Debugger Megaprimer%What's Up With The Symbol Files?  
GNU Debugger Megaprimer%Analyzing Symbols With Nm  
GNU Debugger Megaprimer%System Call Tracing With Strace  
GNU Debugger Megaprimer%Breakpoints, Examining Registers And Memory  
GNU Debugger Megaprimer%Modifying Registers And Memory  
GNU Debugger Megaprimer%GDB Convenience Variables And Calling Routines  
GNU Debugger Megaprimer%Cracking A Simple Binary With Debug Symbols  
GNU Debugger Megaprimer%Disassembling And Cracking A Simple Binary  
GNU Debugger Megaprimer%Conditional Breakpoints Using Variables And Registers  
GNU Debugger Megaprimer%Setting Up Debian Armel In Qemu  
GNU Debugger Megaprimer%Cracking A Simple Program On Arm Architectures  
GNU Debugger Megaprimer%Iphone Application Reversing And Cracking With Gdb  
GNU Debugger Megaprimer%Gdb On 64 Bit Systems  
WAP Challenges%Section Introduction and Challenge 1  
WAP Challenges%Challenge 1: Form Bruteforcing Solutions  
WAP Challenges%Challenge 2: HTTP Form Attacks Reloaded  
WAP Challenges%HTTP Basic Authentication Attack (Easy)  
WAP Challenges%Basic Authentication and Form Bruteforcing (Intermediate)  
WAP Challenges%Challenge 2: HTTP Form Attacks Reloaded Solution  
WAP Challenges%HTTP Basic Authentication Attack - Solutions  
WAP Challenges%Basic Authentication and Form Bruteforcing - Solutions  
WAP Challenges%Challenge 5: Digest Authentication Attack  
WAP Challenges%Challenge 6: Digest Authentication Reloaded  
WAP Challenges%Challenge 5: Digest Authentication Attack Solutions  
WAP Challenges%Challenge 6: Digest Authentication Reloaded Solutions  
WAP Challenges%Challenge 7: Cracking Digest Authentication  
WAP Challenges%Challenge 7: Cracking Digest Authentication Solution  
WAP Challenges%Challenge 8: Broken Authentication  
WAP Challenges%Challenge 8: Broken Authentication Solution  
WAP Challenges%Challenge 9: Session ID Analysis  
WAP Challenges%Challenge 9: Session ID Analysis Solution  
WAP Challenges%Challenge 10: Session ID Analysis II  
WAP Challenges%Challenge 11: Session ID Analysis III  
WAP Challenges%Challenge 12: Decrypting SSL Traffic  
WAP Challenges%Challenge 12: Decrypting SSL Traffic Solution  
WAP Challenges%Challenge 10: Session ID Analysis II Solutions  
WAP Challenges%Challenge 11: Session ID Analysis III Solution  
WAP Challenges%Challenge 13: HTTP Forensics  
WAP Challenges%Challenge 13: HTTP Forensics Solutions  
WAP Challenges%Challenge 14: HTTP Traffic File Carving  
WAP Challenges%Challenge 14: HTTP Traffic File Carving Solution  
WAP Challenges%Challenge 15: HTTP Traffic File Carving II  
WAP Challenges%Challenge 15: HTTP Traffic File Carving II Solutions  
WAP Challenges%Challenge 16: HTML Injection  
WAP Challenges%Challenge 17: HTML Injection II  
WAP Challenges%Challenge 18: HTML Injection III  
WAP Challenges%Challenge 19: HTML Injection IV  
WAP Challenges%Challenge 16: HTML Injection Solution  
WAP Challenges%Challenge 17: HTML Injection II Solution  
WAP Challenges%Challenge 18: HTML Injection III Solution  
WAP Challenges%Challenge 19: HTML Injection IV Solution  
WAP Challenges%Challenge 20: XSS  
WAP Challenges%Challenge 21: XSS II  
WAP Challenges%Challenge 20: XSS Solution  
WAP Challenges%Challenge 21: XSS II Solution  
WAP Challenges%Challenge 22: XSS III  
WAP Challenges%Challenge 23: XSS IV  
WAP Challenges%Challenge 24: XSS V  
WAP Challenges%Challenge 25: XSS VI  
WAP Challenges%Challenge 26: XSS VII  
WAP Challenges%Challenge 22: XSS III Solution  
WAP Challenges%Challenge 23: XSS IV Solution  
WAP Challenges%Challenge 24: XSS V Solution  
WAP Challenges%Challenge 25: XSS VI Solution  
WAP Challenges%Challenge 26: XSS VII Solution  
WAP Challenges%Challenge 27: XSS VIII  
WAP Challenges%Challenge 28: XSS IX  
WAP Challenges%Challenge 27: XSS VIII Solution  
WAP Challenges%Challenge 28: XSS IX Solution  
WAP Challenges%Challenge 29: XSS X  
WAP Challenges%Challenge 30: XSS XI  
WAP Challenges%Challenge 29: XSS X Solution  
WAP Challenges%Challenge 30: XSS XI Solution  
WAP Challenges%Challenge 31: XSS XII  
WAP Challenges%Challenge 32: XSS XIII  
WAP Challenges%Challenge 31: XSS XII Solution  
WAP Challenges%Challenge 32: XSS XIII Solution  
WAP Challenges%Challenge 33: XSS 14  
WAP Challenges%Challenge 33: XSS 14 Solution  
WAP Challenges%Challenge 34: XSS 15  
WAP Challenges%Challenge 34: XSS 15 Solution  
WAP Challenges%Challenge 35: XSS 16  
WAP Challenges%Challenge 35: XSS 16 Solution  
WAP Challenges%Challenge 36: XSS 17  
WAP Challenges%Challenge 36: XSS 17 Solution  
WAP Challenges%Google XSS Challenge 1  
WAP Challenges%Google XSS Challenge 2  
WAP Challenges%Google XSS Challenge 3  
WAP Challenges%Google XSS Challenge 4  
WAP Challenges%Google XSS Challenge 5  
WAP Challenges%Google XSS Challenge 6  
WAP Challenges%Unvalidated Redirects: As Easy as it Gets  
WAP Challenges%Unvalidated Redirects: Decode Me!  
WAP Challenges%Unvalidated Redirects: Daisy Chains!  
WAP Challenges%Unvalidated Redirects: Hashing  
WAP Challenges%Unvalidated Redirects: Hash with a Predictable Salt  
WAP Challenges%Unvalidated Redirects: As Easy as it Gets (Solution)  
WAP Challenges%Unvalidated Redirects: Decode Me! (Solution)  
WAP Challenges%Unvalidated Redirects: No Hints this Time!  
WAP Challenges%Unvalidated Redirects: Salt is included FREE!  
WAP Challenges%Unvalidated Redirects: Security through Obscurity!  
WAP Challenges%Unvalidated Redirects: Daisy Chains! (Solution)  
WAP Challenges%Unvalidated Redirects: Hashing (Solution)  
WAP Challenges%Unvalidated Redirects: Hash with a Predictable Salt (solution)  
WAP Challenges%Unvalidated Redirects: No Hints this Time! (solution)  
WAP Challenges%Unvalidated Redirects: Salt is included FREE! (solution)  
WAP Challenges%Unvalidated Redirects: Security through Obscurity (solution)  
WAP Challenges%CSRF: If only all Pentests were this Easy!  
WAP Challenges%CSRF: Not All Links are Clickable  
WAP Challenges%CSRF: No he won't click your links!  
WAP Challenges%CSRF: How about a POST?  
WAP Challenges%CSRF: Would hate a predictable life!  
WAP Challenges%CSRF: Mutual Exclusivity is Important for Secrecy!  
WAP Challenges%CSRF: Wow! This just got hard!  
WAP Challenges%CSRF: We only hire after Reference Checks!  
WAP Challenges%CSRF: What's in a Name?  
WAP Challenges%CSRF: Custom Code is Always a Target!  
WAP Challenges%CSRF: O! Token Where do you hide?  
WAP Challenges%CSRF: The Web is Cross Domain :)  
WAP Challenges%CSRF: If only all Pentests were this Easy! (solution)  
WAP Challenges%CSRF: Not All Links are Clickable (solution)  
WAP Challenges%CSRF: No he won't click your links! (solution)  
WAP Challenges%CSRF: How about a POST? (solution)  
WAP Challenges%CSRF: Would hate a predictable life! (solution)  
WAP Challenges%CSRF: Mutual Exclusivity is Important for Secrecy! (solution)  
WAP Challenges%CSRF: Wow! This just got hard! (solution)  
WAP Challenges%CSRF: We only hire after Reference Checks! (solution)  
WAP Challenges%CSRF: What's in a Name? (solution)  
WAP Challenges%CSRF: Custom Code is Always a Target! (solution)  
WAP Challenges%CSRF: O! Token Where do you hide? (solution)  
WAP Challenges%CSRF: The Web is Cross Domain :) (solution)  
Pentesting Challenges%Introduction  
Pentesting Challenges%Command Injection ISO: Intro and Install  
Pentesting Challenges%Command Injection ISO: Basili  
Pentesting Challenges%Command Injection ISO: Splunk  
Pentesting Challenges%Command Injection ISO: LCMS  
Pentesting Challenges%Command Injection ISO: Hints for SugarCRM, Webmin, Zenoss  
Pentesting Challenges%Command Injection ISO: Log1cms  
Pentesting Challenges%Command Injection ISO: PHP Charts  
Pentesting Challenges%Command Injection ISO: PHP Tax  
Pentesting Challenges%Command Injection ISO: Webmin  
Pentesting Challenges%Command Injection ISO: SugarCRM  
Pentesting Challenges%Command Injection ISO: Zenoss  
Pentesting Challenges%Arbitrary File Upload Vulnerable ISO: Introduction  
Pentesting Challenges%Arbitrary File Upload Vulnerable ISO: Apprain  
Pentesting Challenges%Arbitrary File Upload Vulnerable ISO: Cuteflow  
PCAP to XML and SQLITE%Introduction and Need for Tool  
PCAP to XML and SQLITE%Concepts and Basic Usage  
PCAP to XML and SQLITE%XPATH Queries  
PCAP to XML and SQLITE%Sqlite Queries  
Airodump-NG Scan Visualizer%Introduction  
Airodump-NG Scan Visualizer%Column Filters  
Airodump-NG Scan Visualizer%Screenshots and Annotations  
Airodump-NG Scan Visualizer%Graphs and Charts  
Airodump-NG Scan Visualizer%Live Mode  
Web Application Pentesting%Course Introduction  
Web Application Pentesting%HTTP Basics  
Web Application Pentesting%Netcat Lab for HTTP 1.1 and 1.0  
Web Application Pentesting%HTTP Methods and Verb Tampering  
Web Application Pentesting%HTTP Method Testing with Nmap and Metasploit  
Web Application Pentesting%HTTP Verb Tampering Demo  
Web Application Pentesting%HTTP Verb Tampering Lab Exercise  
Web Application Pentesting%HTTP Basic Authentication  
Web Application Pentesting%Attacking HTTP Basic Authentication with Nmap and Metasploit  
Web Application Pentesting%HTTP Digest Authentication RFC 2069  
Web Application Pentesting%HTTP Digest Auth Hashing (RFC 2069)  
Web Application Pentesting%HTTP Digest Authentication (RFC 2617)  
Web Application Pentesting%HTTP Statelessness and Cookies  
Web Application Pentesting%HTTP Set-Cookie with HTTPCookie  
Web Application Pentesting%Session ID  
Web Application Pentesting%SSL - Transport Layer Protection  
Web Application Pentesting%SSL MITM using Proxies  
Web Application Pentesting%File Extraction from HTTP Traffic  
Web Application Pentesting%HTML Injection Basics  
Web Application Pentesting%HTML Injection in Tag Parameters  
Web Application Pentesting%HTML Injection using 3rd Party Data Source  
Web Application Pentesting%HTML Injection - Bypass Filters Cgi.Escape  
Web Application Pentesting%Command Injection  
Web Application Pentesting%Command Injection - Filters  
Web Application Pentesting%Web to Shell on the Server  
Web Application Pentesting%Web Shell: PHP Meterpreter  
Web Application Pentesting%Web Shell: Netcat Reverse Connects  
Web Application Pentesting%Web Shell: Using Python, PHP etc.  
Web Application Pentesting%Getting Beyond Alert(XSS)  
Web Application Pentesting%Javascript for Pentesters: Introduction and Hello World  
Web Application Pentesting%XSS: Cross Site Scripting  
Web Application Pentesting%Javascript for Pentesters: Variables  
Web Application Pentesting%Types of XSS  
Web Application Pentesting%Javascript for Pentesters: Operators  
Web Application Pentesting%XSS via Event Handler Attributes  
Web Application Pentesting%Javascript for Pentesters: Conditionals  
Web Application Pentesting%DOM XSS  
Web Application Pentesting%Javascript for Pentesters: Loops  
Web Application Pentesting%Javascript for Pentesters: Functions  
Web Application Pentesting%Javascript for Pentesters: Data Types  
Web Application Pentesting%Javascript for Pentesters: Enumerating Object Properties  
Web Application Pentesting%Javascript for Pentesters: HTML DOM  
Web Application Pentesting%Javascript for Pentesters: Event Handlers  
Web Application Pentesting%Javascript for Pentesters: Cookies  
Web Application Pentesting%Javascript for Pentesters: Stealing Cookies  
Web Application Pentesting%Javascript for Pentesters: Exceptions  
Web Application Pentesting%Javascript for Pentesters: Advanced Forms Manipulation  
Web Application Pentesting%Javascript for Pentesters: XMLHttpRequest Basics  
Web Application Pentesting%Javascript for Pentesters: XHR and HTML Parsing  
Web Application Pentesting%Javascript for Pentesters: XHR and JSON Parsing  
Web Application Pentesting%Javascript for Pentesters: XHR and XML Parsing  
Web Application Pentesting%File Upload Vulnerability Basics  
Web Application Pentesting%Beating Content-Type Check in File Uploads  
Web Application Pentesting%Bypassing Blacklists in File Upload  
Web Application Pentesting%Bypassing Blacklists using PHPx  
Web Application Pentesting%Bypassing Whitelists using Double Extensions in File Uploads  
Web Application Pentesting%Defeating Getimagesize() Checks in File Uploads  
Web Application Pentesting%Null Byte Injection in File Uploads  
Web Application Pentesting%Exploiting File Uploads to get Meterpreter  
Web Application Pentesting%Remote File Inclusion Vulnerability Basics  
Web Application Pentesting%Exploiting RFI with Forced Extensions  
Web Application Pentesting%RFI to Meterpreter  
Web Application Pentesting%LFI Basics  
Web Application Pentesting%LFI with Directory Prepends  
Web Application Pentesting%Remote Code Execution with LFI and File Upload Vulnerability  
Web Application Pentesting%LFI with File Extension Appended - Null Byte Injection   
Web Application Pentesting%Remote Code Execution with LFI and Apache Log Poisoning  
Web Application Pentesting%Remote Code Execution with LFI and SSH Log Poisoning  
Web Application Pentesting%Unvalidated Redirects  
Web Application Pentesting%Encoding Redirect Params  
Web Application Pentesting%Open Redirects: Base64 Encoded Params  
Web Application Pentesting%Open Redirects: Beating Hash Checking  
Web Application Pentesting%Open Redirects: Hashing with Salt  
Web Application Pentesting%Securing Open Redirects  
Web Application Pentesting%Cross Site Request Forgery Basics  
Web Application Pentesting%Cross Site Request Forgery Trigger Tags  
Web Application Pentesting%CSRF Multi-Step Operation Handling  
Web Application Pentesting%Mitigating CSRF with Tokens  
Web Application Pentesting%CSRF and XSS  
Web Application Pentesting%CSRF Token Bypass with Hidden Iframes  
Web Application Pentesting%Insecure Direct Object Reference  
Web Application Pentesting%Insecure Direct Object Reference (Burp Demo)  
Network Pentesting%Course Introduction  
Network Pentesting%Pentesting Routers: Setting up the Lab  
Network Pentesting%Pentesting Routers: Default Credentials for SSH, SNMP etc.  
Network Pentesting%Pentesting Routers: Attacking SSH with Metasploit, Ncrack, Hydra and Medusa  
Network Pentesting%Pentesting Routers: Attacking SNMP with Nmap, Metasploit and Medusa  
Network Pentesting%Pentesting Routers: Attacking the Web Admin Interface  
Network Pentesting%Pentesting Routers: SNMP Post Exploitation  
Network Pentesting%Pentesting Routers: SNMP audit with Metasploit, Snmpcheck and Onesixtyone  
Network Pentesting%Pentesting Routers: SNMP audit Braa and Nmap NSE Scripts  
Network Pentesting%Pentesting Windows Environments: Study Plan  
Network Pentesting%Pentesting Windows Endpoints: Software Based Vulnerabilities  
Network Pentesting%Pentesting Windows Endpoints: Software Misconfigurations  
Network Pentesting%Pentesting Windows Endpoints: Social Engineering  
Network Pentesting%Pentesting Windows Endpoints: Firewall Bypass using Reverse Shells  
Network Pentesting%Pentesting Windows Endpoints: HTTP/HTTPS Tunneling Payload  
Network Pentesting%Pentesting Windows Endpoints: Automatic Outbound Open Port Detection  
Network Pentesting%Pentesting Windows Endpoints: Port Forwarding  
Network Pentesting%Pentesting Windows Endpoints: Pivoting  
Network Pentesting%Pentesting Windows Endpoints: Reverse Connects through Pivots  
Network Pentesting%Pentesting Windows Endpoints:  AV Bypass using Python  
Network Pentesting%Pentesting Windows Endpoints: Win7 Privilege Escalation and UAC Bypass  
Network Pentesting%Pentesting Windows Endpoints: Win7 Hash Dumping and Mimikatz  
Network Pentesting%Pentesting Windows Endpoints: Remote Network Monitoring  
Network Pentesting%Pentesting Windows Endpoints: Windows Sessions, Stations and Desktops  
Network Pentesting%Pentesting Windows Endpoints: Impersonation  
Network Pentesting%Pentesting Windows Endpoints: Log Management with Wevtutil  
Network Pentesting%Pentesting Windows Endpoints: Post Exploitation with WMIC  
Network Pentesting%Pentesting Windows Endpoints: Custom Connect Shell Backdoor  
Network Pentesting%Pentesting Windows Endpoints: Custom Bind Shell Backdoor  
Network Pentesting%Pentesting Windows Endpoints: Hidden Bind Shell Payload  
Network Pentesting%Pentesting Windows Endpoints: Bitsadmin  
Network Pentesting%Pentesting Windows Endpoints: Password Recovery from Browsers  
Network Pentesting%Pentesting Windows Endpoints: Dictionary Attacks on Browser Master Password  
Network Pentesting%Pentesting Windows Endpoints: Tampering the PAC  
Network Pentesting%Pentesting Windows Endpoints: Blocking Websites using a Malicious PAC  
Network Pentesting%Pentesting Windows Endpoints: Social Engineering using a Malicious PAC    
Network Pentesting%Pentesting Windows Endpoints: DNS Poisoning with the Hosts File  
Network Pentesting%AV Evasion with the Veil Framework  
Network Pentesting%Setting up an AV Testing Lab  
Network Pentesting%AV Evasion No Silver Bullet Part 1  
Network Pentesting%AV Evasion No Silver Bullet Part 2  
Network Pentesting%AV Evasion No Silver Bullet Part 3  
Network Pentesting%AV Evasion using the Metasploit Loader  
Network Pentesting%AV Evasion using the Metasploit Loader 64-bit  
Network Pentesting%Run Meterpreter as a 34/64-bit DLL  
Network Pentesting%Running Metasploit Loader as a DLL  
Network Pentesting%DLL Hijacking Basics  
Network Pentesting%Loading Meterpreter via DLL Hijacking using DllMain #FAIL  
Network Pentesting%DLL Hijacking using Reversing with IDA Free  
Network Pentesting%DLL Hijacking uTorrent  
Network Pentesting%Exploiting uTorrent via a Network Share using Metasploit  
Network Pentesting%Exploiting VLC via DLL Hijacking  
Network Pentesting%DLL Hijacking DTools  
Network Pentesting%Meterpreter via DllMain in DLL Hijacking  
Network Pentesting%Privilege Escalation via DLL Hijacking  
Network Pentesting%Using Shellcodeexec for AV Evasion  
Network Pentesting%Detecting Meterpreter  
Network Pentesting%AV Evasion with Powershell  
Network Pentesting%DLL Injection using AppInit_DLLs Part 1  
Network Pentesting%DLL Injection using AppInit_DLLs Part 2  
Network Pentesting%DLL Injection using AppInit_DLLs Part 3  
Network Pentesting%Firefox Addon Attack  
Network Pentesting%DLL Hijacking using .local Redirection  
Network Pentesting%Stripping Manifest Files for DLL Hijacking  
Network Pentesting%DLL Function Forwarding Basics: Understanding Imports  
Network Pentesting%DLL Function Forwarding Basics: Dumping DLL Exports  
Network Pentesting%DLL Function Forwarding Basics: Creating a Hijack DLL Part 1  
Network Pentesting%DLL Function Forwarding Basics: Creating a Hijack DLL Part 2  
Network Pentesting%DLL Function Forwarding Basics: Getting Meterpreter   
Network Pentesting%DLL Function Forwarding Basics: Getting Meterpreter 64-bit  
Network Pentesting%DLL Function Forwarding Basics: Meterpreter (32-bit) in a Thread  
Network Pentesting%DLL Function Forwarding Basics: Meterpreter (64-bit) in a Thread  
Network Pentesting%Perpetual Meterpreter  
Network Pentesting%Run with Escalation - Manifest File and ShellExecuteEx  
Network Pentesting%Anti-Forensics: Windows Prefetch Directory  
Network Pentesting%Anti-Forensics: Disabling Windows Prefetch  
Network Pentesting%0wning Windows Prefetch with Meterpreter  
Network Pentesting%Remote Memory Dumping and Analysis  
Network Pentesting%Dumping Passwords from Browser Memory  
Network Pentesting%Dumping Logon Credentials from Memory Dumps  
Network Pentesting%Full Memory Analysis with MDD and HxD  
Network Pentesting%Remote Memory Dump Analysis with Volatility  
Network Pentesting%Dumping Process Memory with Volatility  
Powershell for Pentesters%Course Introduction  
Powershell for Pentesters%Introduction to Powershell  
Powershell for Pentesters%Exploring and using Cmdlets  
Powershell for Pentesters%Output Formatting  
Powershell for Pentesters%Operators  
Powershell for Pentesters%Advanced Operators  
Powershell for Pentesters%Types in Powershell  
Powershell for Pentesters%Arrays in Powershell  
Powershell for Pentesters%Conditional Statements in Powershell  
Powershell for Pentesters%Loop Statements in Powershell  
Powershell for Pentesters%Basics of Powershell Scripting  
Powershell for Pentesters%Functions in Powershell Part 1  
Powershell for Pentesters%Functions in Powershell Part 2  
Powershell for Pentesters%Functions in Powershell Part 3  
Powershell for Pentesters%Advanced Functions in Powershell  
Powershell for Pentesters%Advanced Scripting with Powershell  
Powershell for Pentesters%Module in Powershell Part 1  
Powershell for Pentesters%Modules in Powershell Part 2  
Powershell for Pentesters%Modules in Powershell Part 3  
Powershell for Pentesters%Remoting Part 1  
Powershell for Pentesters%Remoting Part 2  
Powershell for Pentesters%Powershell Remoting Part 3  
Powershell for Pentesters%Powershell Remoting Part 4  
Powershell for Pentesters%Powershell Remoting Part 5  
Powershell for Pentesters%Powershell Remoting Part 6  
Powershell for Pentesters%Jobs in Powershell  
Powershell for Pentesters%Using .NET in Powershell Part 1  
Powershell for Pentesters%Using .NET in Powershell Part 2  
Powershell for Pentesters%Using .NET in Powershell Part 3  
Powershell for Pentesters%Using .NET in Powershell Part 4  
Powershell for Pentesters%Using .NET in Powershell Part 5  
Powershell for Pentesters%Using WMI in Powershell Part 1  
Powershell for Pentesters%Using WMI in Powershell Part 2  
Powershell for Pentesters%Using WMI in Powershell Part 3  
Powershell for Pentesters%COM and Powershell  
Powershell for Pentesters%Registry and Powershell Part 1  
Powershell for Pentesters%Registry and Powershell Part 2  
Powershell for Pentesters%Registry and Powershell Part 3  
Powershell for Pentesters%Pentest Methodology  
Powershell for Pentesters%Recon and Scanning Part 1  
Powershell for Pentesters%Recon and Scanning Part 2  
Powershell for Pentesters%Vulnerability Scanning and Analysis  
Powershell for Pentesters%Bruteforce Part 1  
Powershell for Pentesters%Bruteforce Part 2  
Powershell for Pentesters%Exploitation: Executing Scripts on MySQL  
Powershell for Pentesters%Client Side Attacks Part 1  
Powershell for Pentesters%Client Side Attacks Part 2  
Powershell for Pentesters%Client Side Attacks Part 3  
Powershell for Pentesters%Client Side Attacks Part 4  
Powershell for Pentesters%PHPMyAdmin Part 1  
Powershell for Pentesters%PHPMyAdmin Part 2  
Powershell for Pentesters%Metasploit Part 1  
Powershell for Pentesters%Metasploit Part 2  
Powershell for Pentesters%Porting Exploits Part 1  
Powershell for Pentesters%Porting Exploits Part 2  
Powershell for Pentesters%Porting Exploits Part 3  
Powershell for Pentesters%Domain Enumeration Part 1  
Powershell for Pentesters%Domain Enumeration Part 2  
Powershell for Pentesters%Information Gathering  
Powershell for Pentesters%Privilege Escalation Part 1  
Powershell for Pentesters%Privilege Escalation Part 2  
Powershell for Pentesters%Privilege Escalation Part 3  
Powershell for Pentesters%Dumping System Secrets Part 1  
Powershell for Pentesters%Dumping System Secrets Part 2  
Powershell for Pentesters%Backdoors Part 1  
Powershell for Pentesters%Backdoors Part 2  
Powershell for Pentesters%POSHing the Hashes  
Powershell for Pentesters%Remoting Revisited  
Powershell for Pentesters%Web Shells  
Powershell for Pentesters%Persistence  
Powershell for Pentesters%Powershell with other Security Tools  
Powershell for Pentesters%Defense with Powershell  
Powershell for Pentesters%PowerShell and HID  
Powershell for Pentesters%Course Conclusion  
Windows Forensics%Course Introduction  
Windows Forensics%Forensic Basics: Background  
Windows Forensics%Forensic Basics: First Steps  
Windows Forensics%Starting an Investigation  
Windows Forensics%Using Netcat  
Windows Forensics%Automating the Netcat Server  
Windows Forensics%Automating the Netcat Client  
Windows Forensics%Collecting Volatile Data Part 1  
Windows Forensics%Collecting Volatile Data Part 2  
Windows Forensics%Collecting Volatile Data Part 3  
Windows Forensics%Collecting Volatile Data Part 4  
Windows Forensics%Collecting Volatile Data Part 5  
Windows Forensics%Creating Filesystem Images Part 1  
Windows Forensics%Creating Filesystem Images Part 2  
Windows Forensics%Creating Filesystem Images Part 3  
Windows Forensics%Software Write Blocking using udev Rules  
Windows Forensics%Making Images from a Physical Disk  
Windows Forensics%Mounting Images Part 1: MBR Basics  
Windows Forensics%Mounting Images Part 2: Mounting MBR Partitions on Linux  
Windows Forensics%Mounting Images Part 3: Mounting Extended Partitions on Linux  
Windows Forensics%Automating Image Mounting with Python: Part 1A - MBR Partitions  
Windows Forensics%Automating Image Mounting with Python: Part 1B - MBR Partitions  
Windows Forensics%Automating Image Mounting with Python: Part 2 - Extended Partitions  
Windows Forensics%Automating Image Mounting with Python: Part 3: GPT Basics  
Windows Forensics%Automating Image Mounting with Python: Part 4: Mounting GPT Partitions  
Windows Forensics%File Allocation Table Part 1: FAT Basics  
Windows Forensics%File Allocation Table Part 2: Using Active Disk Editor to View Images  
Windows Forensics%File Allocation Table Part 3: Volume Boot Records  
Windows Forensics%File Allocation Table Part 4: Using Active Disk Editor to View VBR  
Windows Forensics%File Allocation Table Part 5: using Python to Examine the VBR  
Windows Forensics%File Allocation Table Part 6: Active Disk Editor to examine FAT  
Windows Forensics%File Allocation Table Part 7: using Python to interpret the FAT  
Windows Forensics%File Allocation Table Part 8: Directory Entries  
Windows Forensics%File Allocation Table Part 9: Examining Directories using Active Disk Editor  
Windows Forensics%File Allocation Table Part 10A: using Python to Interpret Directories  
Windows Forensics%File Allocation Table Part 10B: using Python to Interpret Directories  
Windows Forensics%File Allocation Table Part 11: Introduction to The Sleuth Kit  
Windows Forensics%File Allocation Table Part 12A: Intro to Autopsy  
Windows Forensics%File Allocation Table Part 12B: Intro to Autopsy  
Windows Forensics%File Allocation Table Part 13: Deleted File Basics  
Windows Forensics%File Allocation Table Part 14: Deleted Files and Active Disk Editor  
Windows Forensics%File Allocation Table Part 15A: Deleted Files and Python  
Windows Forensics%File Allocation Table Part 15B: Deleted Files and Python  
Windows Forensics%File Forensics Part 1  
Windows Forensics%File Forensics Part 2A: Active Disk Editor  
Windows Forensics%File Forensics Part 2B: Active Disk Editor  
Windows Forensics%File Forensics Part 3: using the File Utility  
Windows Forensics%File Forensics Part 4: Finding Mismatched Files with Shell Scripts  
Windows Forensics%File Forensics Part 5: Finding Files with Python  
Windows Forensics%File Forensics Part 6: using Scalpel to Carve Files  
Windows Forensics%NTFS Part 1: The Basics  
Windows Forensics%NTFS Part 2: Volume Boot Record  
Windows Forensics%NTFS Part 3: MFT Entry Basics  
Windows Forensics%NTFS Part 4: MFT Attributes 10 and 30  
Windows Forensics%NTFS Part 5: Data Attribute for a Small File  
Windows Forensics%NTFS Part 6: Data Attribute for a Medium File  
Windows Forensics%NTFS Part 7: Data Attribute with Negative Offsets  
Windows Forensics%NTFS Part 8: Large Files  
Windows Forensics%NTFS part 9: Directory Basics  
Windows Forensics%NTFS Part 10: Small Directory Demo  
Windows Forensics%NTFS Part 11A: Medium sized Directories  
Windows Forensics%NTFS Part 11B: Medium sized Directories  
Windows Forensics%NTFS Part 12A: Large Directories  
Windows Forensics%NTFS Part 12B: Large Directories  
Windows Forensics%NTFS Part 13A: Deleted Files  
Windows Forensics%NTFS Part 13B: Deleted Files  
Windows Forensics%Python and NTFS Part 1  
Windows Forensics%Python and NTFS Part 2: MFT Headers  
Windows Forensics%Python and NTFS Part 3: Attribute Headers  
Windows Forensics%Python and NTFS Part 4: Standard Info  
Windows Forensics%Python and NTFS Part 5: Filename Attribute  
Windows Forensics%Python and NTFS Part 6: Data Attribute  
Windows Forensics%Python and NTFS Part 7: Index Root  
Windows Forensics%Python and NTFS Part 8: Index Allocations  
Windows Forensics%Python and NTFS Part 9: Index Allocations  
Windows Forensics%Python and NTFS Part 10: Attribute Lists  
Windows Forensics%Python and NTFS Part 11A: Extracting Files & Directories  
Windows Forensics%Python and NTFS Part 11B: Extracting Files & Directories  
Windows Forensics%Python and NTFS Part 12: Enhancing the Extract Script  
Windows Forensics%Creating Timelines Part 1: Extracting Timeline Information  
Windows Forensics%Creating Timelines Part 2: Importing Timeline Information into a Spreadsheet  
Windows Forensics%Creating Timelines Part 3: Importing Timeline Information into a Database  
Windows Forensics%Creating Timelines Part 4: Creating a Timeline Table and running Queries  
Windows Forensics%Creating Timelines Part 5: Bash Script to Create Timelines  
Windows Forensics%Creating Timelines Part 6: Understanding NTFS Timestamps  
Windows Forensics%Creating Timelines Part 7: Printing Timelines File by File  
Windows Forensics%Registry Part 1: The Basics  
Windows Forensics%Registry Part 2: Extracting Hives  
Windows Forensics%Registry Part 3: Examining the Registry  
Windows Forensics%Registry Part 4: The System Hive  
Windows Forensics%Registry Part 5: The Software Hive  
Windows Forensics%Registry Part 6: the User Hive  
Windows Forensics%Registry Part 7A:  RegRipper  
Windows Forensics%Registry Part 7B: RegRipper  
Windows Forensics%Registry Part 7C: RegRipper  
Windows Forensics%Windows Artifacts Part 1: Recycle Bin  
Windows Forensics%Windows Artifacts Part 2: Event Logs  
Windows Forensics%Windows Artifacts Part 3: Prefetch Files  
Windows Forensics%Windows Artifacts Part 4: User App Data Directories  
Windows Forensics%Windows Artifacts Part 5: Misc Artifacts  
Windows Forensics%Windows Artifacts Part 6: Web Browser History  
Windows Forensics%Memory Forensics Part 1: Introduction to Volatility  
Windows Forensics%Memory Forensics Part 2: Volatility Basics  
Windows Forensics%Memory Forensics Part 3: Volatility Process Commands  
Windows Forensics%Memory Forensics Part 4: Looking for a Single Process  
Windows Forensics%Memory Forensics Part 5: Looking Deeper at a Single Process  
Windows Forensics%Memory Forensics Part 6: Finding Malware  
Windows Forensics%Memory Forensics Part 7a: More Volatility Commands  
Windows Forensics%Memory Forensics Part 7b: More Volatility Commands  
Windows Forensics%Suspicious Files Part 1: is it in a Database?  
Windows Forensics%Suspicious Files Part 2: it is not in a Database?  
Windows Forensics%Suspicious Files Part 3: Packers  
Windows Forensics%Suspicious Files Part 4: Setting up a Sandbox  
Windows Forensics%Suspicious Files Part 5: Setting up a 32-bit Debugger  
Windows Forensics%Suspicious Files Part 6: Examining a 32-bit Executable  
Windows Forensics%Suspicious Files Part 7: Examining a 64-bit Executable  
Windows Forensics%Finishing the Job  
Windows Forensics%The Road Ahead  
Data Science and Machine Learning for Infosec%Course Introduction  
Data Science and Machine Learning for Infosec%Lab Setup and Installation  
Data Science and Machine Learning for Infosec%Module 1: Pandas Part 1  
Data Science and Machine Learning for Infosec%Module 1: Pandas Part 2  
Data Science and Machine Learning for Infosec%Module 1: Pandas Part 3  
Data Science and Machine Learning for Infosec%Module 1: Pandas Part 4  
Data Science and Machine Learning for Infosec%Module 2: K Nearest Neighbors (KNN) Part 1  
Data Science and Machine Learning for Infosec%Module 2: K Nearest Neighbors (KNN) Part 2  
Data Science and Machine Learning for Infosec%Module 2: K Nearest Neighbors (KNN) Part 3  
Data Science and Machine Learning for Infosec%Module 2: K Nearest Neighbors (KNN) Part 4  
Data Science and Machine Learning for Infosec%Module 3:  Model Evaluation and Linear Regression Part 1  
Data Science and Machine Learning for Infosec%Module 3: Model Evaluation and Linear Regression Part 2  
Data Science and Machine Learning for Infosec%Module 3: Model Evaluation and Linear Regression Part 3  
Data Science and Machine Learning for Infosec%Module 3: Model Evaluation and Linear Regression Part 4  
Data Science and Machine Learning for Infosec%Module 4: Logistic Regression Part 1  
Data Science and Machine Learning for Infosec%Module 4: Logistic Regression Part 2  
Data Science and Machine Learning for Infosec%Module 4: Logistic Regression Part 3  
Data Science and Machine Learning for Infosec%Module 4: Logistic Regression Part 4  
Data Science and Machine Learning for Infosec%Module 5: Natural Language Processing Part 1  
Data Science and Machine Learning for Infosec%Module 5: Natural Language Processing Part 2  
Data Science and Machine Learning for Infosec%Module 5: Natural Language Processing Part 3  
Data Science and Machine Learning for Infosec%Module 5: Natural Language Processing Part 4  
Data Science and Machine Learning for Infosec%Module 6: Naive Bayes Classification Part 1  
Data Science and Machine Learning for Infosec%Module 6: Naive Bayes Classification Part 2  
Data Science and Machine Learning for Infosec%Module 6: Naive Bayes Classification Part 3  
Data Science and Machine Learning for Infosec%Module 6: Naive Bayes Classification Part 4  
Data Science and Machine Learning for Infosec%Module 7: Advanced Scikit Learn Part 1  
Data Science and Machine Learning for Infosec%Module 7: Advanced Scikit Learn Part 2  
Data Science and Machine Learning for Infosec%Module 8: Decision Trees Part 1  
Data Science and Machine Learning for Infosec%Module 8: Decision Trees Part 2  
Data Science and Machine Learning for Infosec%Module 8: Decision Trees Part 3  
Data Science and Machine Learning for Infosec%Module 9: Ensembling Techniques Part 1  
Data Science and Machine Learning for Infosec%Module 9: Ensembling Techniques Part 2  
Data Science and Machine Learning for Infosec%Module 9: Ensembling Techniques Part 3  
Data Science and Machine Learning for Infosec%Module 9: Ensembling Techniques Part 4  
Data Science and Machine Learning for Infosec%Module 10: Dimension Reduction Part 1  
Data Science and Machine Learning for Infosec%Module 10: Dimension Reduction Part 2  
Data Science and Machine Learning for Infosec%Module 10: Dimension Reduction Part 3  
Data Science and Machine Learning for Infosec%Module 11: Clustering Part 1  
Data Science and Machine Learning for Infosec%Module 11: Clustering Part 2  
Data Science and Machine Learning for Infosec%Module 11: Clustering Part 3  
Data Science and Machine Learning for Infosec%Module 12: Stochastic Gradient Descent Part 1  
Data Science and Machine Learning for Infosec%Module 12: Stochastic Gradient Descent Part 2  
Data Science and Machine Learning for Infosec%Module 12: Stochastic Gradient Descent Part 3  
Data Science and Machine Learning for Infosec%Module 13: Neural Networks - Deep Learning Part 1  
Data Science and Machine Learning for Infosec%Module 13: Neural Networks - Deep Learning Part 2  
Data Science and Machine Learning for Infosec%Module 13: Neural Networks - Deep Learning Part 3  
Data Science and Machine Learning for Infosec%Module 14: Recommendations Engine Part 1  
Data Science and Machine Learning for Infosec%Module 14: Recommendations Engine Part 2  
Data Science and Machine Learning for Infosec%Case Study: Detecting Malicious URLs  
WinDbg Fundamentals: User Mode%Course Introduction  
WinDbg Fundamentals: User Mode%Module 1: Lab Installation  
WinDbg Fundamentals: User Mode%Module 1: Start Debugging  
WinDbg Fundamentals: User Mode%Module 1: Summary  
WinDbg Fundamentals: User Mode%Module 2: Symbols  
WinDbg Fundamentals: User Mode%Module 2: Threads  
WinDbg Fundamentals: User Mode%Module 2: Stacks  
WinDbg Fundamentals: User Mode%Module 2: Breakpoints Part I  
WinDbg Fundamentals: User Mode%Module 2: Breakpoints Part II  
WinDbg Fundamentals: User Mode%Module 2: Modules  
WinDbg Fundamentals: User Mode%Module 2: Source Code  
WinDbg Fundamentals: User Mode%Module 3: Exceptions and Events  
WinDbg Fundamentals: User Mode%Module 3: Advanced Breakpoints  
WinDbg Fundamentals: User Mode%Module 3: Memory  
WinDbg Fundamentals: User Mode%Module 3: Child Process  
WinDbg Fundamentals: User Mode%Module 3: Dump Files  
WinDbg Fundamentals: User Mode%Module 3: Summary  
WinDbg Fundamentals: User Mode%Module 4: Debugging Scenarios: The Application  
WinDbg Fundamentals: User Mode%Module 4: Scenario I  
WinDbg Fundamentals: User Mode%Module 4: Scenario II  
WinDbg Fundamentals: User Mode%Module 4: Scenario III  
WinDbg Fundamentals: User Mode%Module 4: Scenario IV  
WinDbg Fundamentals: User Mode%Module 4: Summary  
WinDbg Fundamentals: Kernel Mode%Course Introduction  
WinDbg Fundamentals: Kernel Mode%Module 1: Kernel Debugging Setup  
WinDbg Fundamentals: Kernel Mode%Module 1: Local Kernel Debugging  
WinDbg Fundamentals: Kernel Mode%Module 1: Local Kernel Debugging with LiveKD  
WinDbg Fundamentals: Kernel Mode%Module 1: Remote Kernel Debugging  
WinDbg Fundamentals: Kernel Mode%Module 2: Kernel Exploration: Processes, Modules, Jobs, Threads Part I  
WinDbg Fundamentals: Kernel Mode%Module 2: Kernel Exploration: Part II  
WinDbg Fundamentals: Kernel Mode%Module 2: Kernel Exploration: Part III  
WinDbg Fundamentals: Kernel Mode%Module 2: Kernel Exploration: Part IV  
WinDbg Fundamentals: Kernel Mode%Module 3: Objects, IO and Dump Files: Part I  
WinDbg Fundamentals: Kernel Mode%Module 3: Objects, IO and Dump Files: Part II  
WinDbg Fundamentals: Kernel Mode%Module 3: Objects, IO and Dump Files: Part III  
WinDbg Fundamentals: Kernel Mode%Module 3: Objects, IO and Dump Files: Part IV  
WinDbg Fundamentals: Kernel Mode%Module 3: Objects, IO and Dump Files: Part V 	  
Abusing SQL Server Trusts in a Windows Domain%Course Introduction  
Abusing SQL Server Trusts in a Windows Domain%MS SQL Server Basics  
Abusing SQL Server Trusts in a Windows Domain%Powershell Role and Introduction  
Abusing SQL Server Trusts in a Windows Domain%Discovering SQL Server within the Domain  
Abusing SQL Server Trusts in a Windows Domain%Bruteforce Attacks on SQL Server  
Abusing SQL Server Trusts in a Windows Domain%Post Exploitation Data Enumeration  
Abusing SQL Server Trusts in a Windows Domain%Privilege Escalation: Impersonation  
Abusing SQL Server Trusts in a Windows Domain%Privilege Escalation: Trustworthy Property  
Abusing SQL Server Trusts in a Windows Domain%Command Execution Part 1  
Abusing SQL Server Trusts in a Windows Domain%Command Execution Part 2  
Abusing SQL Server Trusts in a Windows Domain%Mapping Trusts  
Abusing SQL Server Trusts in a Windows Domain%Exploiting Database Links  
Abusing SQL Server Trusts in a Windows Domain%Privilege Escalation: Miscellaneous Techniques  
Abusing SQL Server Trusts in a Windows Domain%Persistence  
Abusing SQL Server Trusts in a Windows Domain%Defenses  
Abusing SQL Server Trusts in a Windows Domain%Course Conclusion  
Embedded-IoT Linux for Red-Blue Teams%Course Introduction  
Embedded-IoT Linux for Red-Blue Teams%Embedded Linux Booting Process (Multi-Stage Bootloaders, Kernel, Filesystem)  
Embedded-IoT Linux for Red-Blue Teams%Booting the BeagleBone Black with Custom Linux  
Embedded-IoT Linux for Red-Blue Teams%Deep Dive: Exploring U-Boot  
Embedded-IoT Linux for Red-Blue Teams%U-Boot: Linux Manual Boot  
Embedded-IoT Linux for Red-Blue Teams%U-Boot: Network Booting  
Embedded-IoT Linux for Red-Blue Teams%U-Boot Bootkit: Filesystem Tampering  
Embedded-IoT Linux for Red-Blue Teams%IoT Firmware Internals: The Toolchain  
Embedded-IoT Linux for Red-Blue Teams%IoT Firmware Internals: The Bootloader U-Boot  
Embedded-IoT Linux for Red-Blue Teams%IoT Firmware Internals: Kernel and Device Tree  
Embedded-IoT Linux for Red-Blue Teams%IoT Firmware Internals: Root Filesystem with Buildroot  
Embedded-IoT Linux for Red-Blue Teams%IoT Firmware Internals: Booting the Device  
Embedded-IoT Linux for Red-Blue Teams%IoT Backdoors: Remote Shell  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: Hello World  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: Hiding Itself  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: Modify Process Name  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: System Call Monitoring  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: Subverting Kill Command  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: Network Stack Monitoring  
Embedded-IoT Linux for Red-Blue Teams%Understanding IoT Rootkits: Network Stack Backdoor  
Embedded-IoT Linux for Red-Blue Teams%IoT/Embedded Device: UART Access  
Embedded-IoT Linux for Red-Blue Teams%IoT/Embedded Device: Navigating the GPL Code  
Embedded-IoT Linux for Red-Blue Teams%GPL Firmware: Compile Custom Userspace Applications  
Embedded-IoT Linux for Red-Blue Teams%GPL Firmware: Kernel Compilation  
Embedded-IoT Linux for Red-Blue Teams%GPL Firmware: Porting Custom Kernel Modules  
Embedded-IoT Linux for Red-Blue Teams%GPL Firmware: Porting iamhiding.ko  
Embedded-IoT Linux for Red-Blue Teams%GPL Firmware: Porting Netfilter Monitor  
Embedded-IoT Linux for Red-Blue Teams%GPL Firmware: Porting Network Backdoor Demo  
OSINT: Fun with Open Source Intelligence%Course Introduction  
OSINT: Fun with Open Source Intelligence%What is Intelligence and OSINT?  
OSINT: Fun with Open Source Intelligence%Grey Areas and Ethical Concerns  
OSINT: Fun with Open Source Intelligence%Robin Sage  
OSINT: Fun with Open Source Intelligence%Information is Everywhere: Dating  
OSINT: Fun with Open Source Intelligence%Lab 1: Building a Fake Profile  
OSINT: Fun with Open Source Intelligence%Thinking and Analysis  
OSINT: Fun with Open Source Intelligence%Looking at Websites  
OSINT: Fun with Open Source Intelligence%Google Custom Searches  
OSINT: Fun with Open Source Intelligence%Disposable Search Engines  
OSINT: Fun with Open Source Intelligence%FOCA Creepy Maltego  
OSINT: Fun with Open Source Intelligence%Lab 2: Building your own Engine  
OSINT: Fun with Open Source Intelligence%Counter Intel and Defenses  
OSINT: Fun with Open Source Intelligence%Fake News Website  
OSINT: Fun with Open Source Intelligence%Stock Market  
OSINT: Fun with Open Source Intelligence%Clinton and Petraeus  
OSINT: Fun with Open Source Intelligence%Car Manufacturer  
OSINT: Fun with Open Source Intelligence%Mossfon Part 1  
OSINT: Fun with Open Source Intelligence%Mossfon Part 2  
OSINT: Fun with Open Source Intelligence%Intel Gathering Recipes  
OSINT: Fun with Open Source Intelligence%Lab 3: Intel Exercise Mossinger  
OSINT: Fun with Open Source Intelligence%Concluding Thoughts  
Pandas for Pentesters%Course Introduction  
Pandas for Pentesters%Lab Setup  
Pandas for Pentesters%Numpy  
Pandas for Pentesters%Numpy Basics  
Pandas for Pentesters%Numpy: Boolean Indexing  
Pandas for Pentesters%Numpy: Universal Functions  
Pandas for Pentesters%Pandas: Series Basics  
Pandas for Pentesters%Pandas Series: Vector Operations  
Pandas for Pentesters%Pandas Series: Logical String Operations  
Pandas for Pentesters%Pandas Series: Miscellaneous Operations  
Pandas for Pentesters%Pandas Dataframe: Basics  
Pandas for Pentesters%Pandas Dataframe: Logical Operations  
Pandas for Pentesters%Pandas Dataframe: Apply Function  
Pandas for Pentesters%Pandas Dataframe: Split, Apply, Combine, GroupBy  
Pandas for Pentesters%Pandas Dataframe: Split, Apply, Combine, Aggregate  
Pandas for Pentesters%Pandas Dataframe: Split, Apply, Combine, Filter  
Pandas for Pentesters%Airodump-NG Scan Analysis Part 1  
Pandas for Pentesters%Airodump-NG Scan Analysis Part 2  
Pandas for Pentesters%Airodump-NG Scan Analysis Part 3  
Pandas for Pentesters%Airodump-NG Scan Analysis Part 4  
Pandas for Pentesters%Airodump-NG Scan Analysis Part 5  
Pandas for Pentesters%Conclusion  
Wi-Fi Monitoring for Red-Blue Teams%Introduction and Course Outline  
Wi-Fi Monitoring for Red-Blue Teams%802.11n Monitoring using Windows Netmon  
Wi-Fi Monitoring for Red-Blue Teams%802.11ac Monitoring on Windows  
Wi-Fi Monitoring for Red-Blue Teams%802.11n Monitoring on Windows  
Wi-Fi Monitoring for Red-Blue Teams%802.11ac Monitoring on Linux  
Wi-Fi Monitoring for Red-Blue Teams%Remote Monitoring using a 802.11ac Access Point  
Wi-Fi Monitoring for Red-Blue Teams%Remote Monitoring using a 802.11ac Access Point Part 2  
Wi-Fi Monitoring for Red-Blue Teams%Remote Monitoring using High End Access Points  
Wi-Fi Monitoring for Red-Blue Teams%Installing OpenWRT on a 802.11ac Access Point  
Wi-Fi Monitoring for Red-Blue Teams%Installing OpenWRT on a 802.11ac Access Point Part 2  
Wi-Fi Monitoring for Red-Blue Teams%Installing OpenWRT on a 802.11ac Access Point Part 3  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Course Introduction  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Lab Setup  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Listing API  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Listing API: WTSEnumerateProcessesEx Part 1  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Listing API: WTSEnumerateProcessesEx Part 2  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Listing API: WTSEnumerateProcessesEx Part 3  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Tokens and Privileges: Common Bugs  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Requesting Elevation using ShellExecuteEx  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Token Dumper Part 1: The Basics  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Token Dumper Part 2: Code Walkthrough  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Listing API:  CreateToolhelp32Snapshot  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Process Listing API: PSAPI EnumProcess  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Reading Process Memory:  Toolhelp32ReadProcessMemory  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Reading Process Memory: ReadProcessMemory  
Windows API Exploitation Recipes: Processes, Tokens and Memory RW%Writing to Process Memory: WriteProcessMemory  
Hacker Project: SMS Controlled Pentest Bot%Course Preview with Final Demo  
Hacker Project: SMS Controlled Pentest Bot%Course Introduction  
Hacker Project: SMS Controlled Pentest Bot%Installing Raspbian Sketch Lite in Headless Mode  
Hacker Project: SMS Controlled Pentest Bot%Installing the Hologram SIM  
Hacker Project: SMS Controlled Pentest Bot%Modem Setup Basics  
Hacker Project: SMS Controlled Pentest Bot%Send - Receive SMS  
Hacker Project: SMS Controlled Pentest Bot%Automating Nmap with Python  
Hacker Project: SMS Controlled Pentest Bot%Final End-to-End Demo  
Getting started with Pentesting using the Raspberry Pi%Course Introduction  
Getting started with Pentesting using the Raspberry Pi%Acquiring Hardware  
Getting started with Pentesting using the Raspberry Pi%Installing Kali Linux on Raspberry Pi  
Getting started with Pentesting using the Raspberry Pi%Configuring SSH on the Raspberry Pi  
Getting started with Pentesting using the Raspberry Pi%Configuring Raspberry Pi to connect to WiFi in Headless Mode  
Getting started with Pentesting using the Raspberry Pi%Wi-Fi Sniffing on the Raspberry Pi  
Getting started with Pentesting using the Raspberry Pi%Running Multiple Processes with Screen and Nohup  
Traffic Analysis: TSHARK Unleashed%Course Introduction and Lab Setup  
Traffic Analysis: TSHARK Unleashed%Tshark: Interface Enumeration and Capturing Packets  
Traffic Analysis: TSHARK Unleashed%Tshark: Exporting Packets as PDML, PSML, JSON and ELK  
Traffic Analysis: TSHARK Unleashed%Tshark: Converting Packets to HTML  
Traffic Analysis: TSHARK Unleashed%Tshark: Display and Capture Filters via Command Line  
Traffic Analysis: TSHARK Unleashed%Tshark: Custom Field Extraction from Packets  
Traffic Analysis: TSHARK Unleashed%Tshark: Pipelining Extracted Data with Sort and Uniq  
Traffic Analysis: TSHARK Unleashed%Tshark Summaries: Protocols, Summaries and Read Filters  
Traffic Analysis: TSHARK Unleashed%Tshark Summaries: Conversations and Endpoints  
Traffic Analysis: TSHARK Unleashed%Tshark Summaries: Miscellaneous  
Traffic Analysis: TSHARK Unleashed%Tshark: Multi-File Capture with Ring Buffer  
Traffic Analysis: TSHARK Unleashed%Tshark: Decode Unknown Protocol As  
Traffic Analysis: TSHARK Unleashed%Tshark: Preference Values: SSL Decryption  
Traffic Analysis: TSHARK Unleashed%Tshark: Python Automation: Pyshark Basics  
Traffic Analysis: TSHARK Unleashed%Tshark: Python Automation: Python Deep Dive  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 1: The Basics  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 2: Manual Dumping of Key-Values  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 3: Recon with libmemcached-tools  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 4: Remote Python Access  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 5: Advanced Enumeration: LRU CRAWLER  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 6: Advanced Enumeration: WATCHERS  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 7: Metasploit Memcache Enumeration  
Memcache Reconnaissance for Red-Blue Teams%Memcache Servers Part 8: Authentication Dictionary Attack  
WMI Attacks and Defense%Course Introduction  
WMI Attacks and Defense%WMI Architecture  
WMI Attacks and Defense%Using WMI Classes  
WMI Attacks and Defense%Using WMI Methods  
WMI Attacks and Defense%WMI Associations  
WMI Attacks and Defense%Remote Computers  
WMI Attacks and Defense%WMI: Registry  
WMI Attacks and Defense%Info Gathering with WMI  
WMI Attacks and Defense%Active Directory Enumeration with WMI  
WMI Attacks and Defense%Information Storage  
WMI Attacks and Defense%Lateral Movement - Command Execution Win32 Service  
WMI Attacks and Defense%Storage and C2C  
WMI Attacks and Defense%Custom Providers  
WMI Attacks and Defense%WMI Events  
WMI Attacks and Defense%Security Descriptor  
WMI Attacks and Defense%Manual Detection  
WMI Attacks and Defense%Blue Team Tools  
WMI Attacks and Defense%Course Conclusion  
WMI Attacks and Defense%Create your own Lab Setup  
Reverse Engineering Linux 32-bit Applications%Course Introduction  
Reverse Engineering Linux 32-bit Applications%Getting Started  
Reverse Engineering Linux 32-bit Applications%Evan's Debugger  
Reverse Engineering Linux 32-bit Applications%GDB Debugger  
Reverse Engineering Linux 32-bit Applications%IDA Pro  
Reverse Engineering Linux 32-bit Applications%A Little Bit of Assembly Part 1  
Reverse Engineering Linux 32-bit Applications%A Little Bit of Assembly Part 2  
Reverse Engineering Linux 32-bit Applications%A Little Bit of Assembly Part 3  
Reverse Engineering Linux 32-bit Applications%A Little Bit of Assembly Part 4  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 1: The Basics  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 2: A Simple Example  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 3: Stack Protection  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 4: Calculating Offsets  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 5: JMP ESP  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 6: More Stack Protection  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 7: Return to Libc  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 8: Chaining Return to Libc  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 9: ASLR and the PLT  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 10: GOT Overwrite and Dereference  
Reverse Engineering Linux 32-bit Applications%Stack Buffer Overflows Part 11: Stack Canaries and Summary  
Reverse Engineering Linux 32-bit Applications%Heap Buffer Overflows Part 1: Heap Basics  
Reverse Engineering Linux 32-bit Applications%Heap Buffer Overflows Part 2: Simple Examples  
Reverse Engineering Linux 32-bit Applications%Heap Buffer Overflows Part 3: Simple Examples Continued  
Reverse Engineering Linux 32-bit Applications%Heap Buffer Overflows Part 4: More Examples  
Reverse Engineering Linux 32-bit Applications%Heap Buffer Overflows Part 5: Still More Examples  
Reverse Engineering Linux 32-bit Applications%Format String Flaws Part 1: The Basics  
Reverse Engineering Linux 32-bit Applications%Format String Flaws Part 2: Crashing Programs  
Reverse Engineering Linux 32-bit Applications%Format String Flaws Part 3: Reading Data From the Stack  
Reverse Engineering Linux 32-bit Applications%Format String Flaws Part 4: Reading Arbitrary Memory Locations  
Reverse Engineering Linux 32-bit Applications%Format String Flaws Part 5: Writing to Arbitrary Memory Locations and Summary  
Reverse Engineering Linux 32-bit Applications%Kernel Flaws Part 1: How Linux API Functions are Called  
Reverse Engineering Linux 32-bit Applications%Kernel Flaws Part 2: 32-bit System Calls  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 1: The Basics  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 2: First Steps  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 3: Symbols and Libraries  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 4: ELF Files  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 5: Examining Sections and Segments  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 6: Setting Up a Sand Box  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 7: Setting Up a Sand Box Continued  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 8: Using Strace and Ltrace  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 9: Using Evan’s Debugger  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 10: Using GDB Debugger  
Reverse Engineering Linux 32-bit Applications%Reversing Malware Part 11: Obfuscation  
Reverse Engineering Linux 32-bit Applications%Course Wrapup  
Reverse Engineering Win32 Applications%Course Introduction  
Reverse Engineering Win32 Applications%Getting Started  
Reverse Engineering Win32 Applications%Olly Debugger  
Reverse Engineering Win32 Applications%Immunity Debugger  
Reverse Engineering Win32 Applications%IDA Pro  
Reverse Engineering Win32 Applications%A Little Bit of Assembly Part 1  
Reverse Engineering Win32 Applications%A Little Bit of Assembly Part 2  
Reverse Engineering Win32 Applications%A Little Bit of Assembly Part 3  
Reverse Engineering Win32 Applications%A Little Bit of Assembly Part 4  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 1: The Basics  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 2: Overwriting Return Addresses  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 3: Calculating Offsets  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 4: Injecting Code on the Stack  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 5: JMP ESP  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 6: Stack Protection  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 7: Return to Libc  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 8: Return to Libc Chaining  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 9: ASLR Mitigation  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 10: Return Oriented Programming  
Reverse Engineering Win32 Applications%Stack Buffer Overflows Part 11: Stack Canaries and Summary  
Reverse Engineering Win32 Applications%Heap Overflows Part 1: Heap Basics  
Reverse Engineering Win32 Applications%Heap Overflows Part 2: Simple Examples  
Reverse Engineering Win32 Applications%Heap Overflows Part 3: Simple Examples Continued  
Reverse Engineering Win32 Applications%Heap Overflows Part 4: More Examples  
Reverse Engineering Win32 Applications%Heap Overflows Part 5: Still More Examples  
Reverse Engineering Win32 Applications%Format String Errors Part 1: The Basics  
Reverse Engineering Win32 Applications%Format String Errors Part 2: Crashing Programs  
Reverse Engineering Win32 Applications%Format String Errors Part 3: Reading the Stack  
Reverse Engineering Win32 Applications%Format String Errors Part 4A: Reading Arbitrary Memory  
Reverse Engineering Win32 Applications%Format String Errors Part 4B: Reading Arbitrary Memory (continued)  
Reverse Engineering Win32 Applications%Format String Errors Part 5: Writing to Arbitrary Memory and Summary  
Reverse Engineering Win32 Applications%Section Overflows  
Reverse Engineering Win32 Applications%Kernel Flaws  
Reverse Engineering Win32 Applications%Other Tools Part 1: Decompilers  
Reverse Engineering Win32 Applications%Other Tools Part 2: One More Decompiler  
Reverse Engineering Win32 Applications%Other Tools Part 3: PE Browse  
Reverse Engineering Win32 Applications%Other Tools Part 4: Simple Shell Scripts  
Reverse Engineering Win32 Applications%Other Tools Part 5: Fuzzers  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 1: Introduction  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 2: Decompiling Vulnserver  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 3: Quick Hits Finding Vulns  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 4: Simple Fuzzing  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 5: Using Zzuf  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 6: Using Spike  
Reverse Engineering Win32 Applications%Case Study Vulnserver Part 7: Using Metasploit Payloads  
Reverse Engineering Win32 Applications%Malware Part 1: The Basics  
Reverse Engineering Win32 Applications%Malware Part 2: First Steps  
Reverse Engineering Win32 Applications%Malware Part 3: PEBrowse  
Reverse Engineering Win32 Applications%Malware Part 4: Setting Up a Sandbox  
Reverse Engineering Win32 Applications%Malware Part 5: IDA Debugger  
Reverse Engineering Win32 Applications%Malware Part 6: PEBrowseDbg Interactive  
Reverse Engineering Win32 Applications%Malware Part 7: Obfuscation  
Reverse Engineering Win32 Applications%Course Wrapup  
VoIP Traffic Analysis%Course Introduction  
VoIP Traffic Analysis%VoIP Protocol Basics  
VoIP Traffic Analysis%User Agent Client Registration Traffic Analysis  
VoIP Traffic Analysis%SIP + RTP Basics: Two Caller Traffic  
VoIP Traffic Analysis%Extracting Audio File from RTP Traffic  
VoIP Traffic Analysis%SIP + RTP: Voicemail Traffic Analysis  
VoIP Traffic Analysis%SIP + RTP: Conference Call Traffic Analysis  
VoIP Traffic Analysis%Using Audacity to Analyze VoIP Voice Data  
VoIP Traffic Analysis%SIP over TLS + RTP: Two Caller Traffic Analysis  
VoIP Traffic Analysis%SIP over TLS + RTP: Tshark Analysis and Automation  
VoIP Traffic Analysis%SIP over TLS + RTP: Patching Pcap2Wav  
VoIP Traffic Analysis%SIP + SRTP: Decrypt Voicemail Traffic Part 1  
VoIP Traffic Analysis%SIP + SRTP: Decrypt Voicemail Traffic Part 2  
VoIP Traffic Analysis%SIP + SRTP: Decryption using Tshark, Text2Pcap and Pcap2Wav  
VoIP Traffic Analysis%SIP + SRTP: Decrypting Two Caller Conversations  
VoIP Traffic Analysis%SIP + SRTP: Decrypting Conference Calls  
VoIP Traffic Analysis%SIP over TLS + SRTP: Decrypting Voicemail  
VoIP Traffic Analysis%SIP over TLS + SRTP: Decrypting Two Caller Traffic with Tshark  
VoIP Traffic Analysis%SIP over TLS + SRTP: Decrypting Conference Calls  
VoIP Traffic Analysis%SIP Messaging  
VoIP Traffic Analysis%DTMF in VoIP Traffic  
VoIP Traffic Analysis%Monitoring Voicemail Traffic: Passcode Recovery  
VoIP Traffic Analysis%Custom Wireshark Plugin: Traffic Decryption  
VoIP Traffic Analysis%Cracking SIP Authorization with SIPDump and SIPCrack  
VoIP Traffic Analysis%Cracking SIP Authorization with Hashcat  
VoIP Traffic Analysis%Course Conclusion  
Windows Red Team Lab%Windows Red Team Lab Basics  
Windows Red Team Lab%Domain Enumeration Techniques  
Windows Red Team Lab%Local Privilege Escalation  
Windows Red Team Lab%Lateral Movement  
Windows Red Team Lab%Domain Privilege Escalation  
Windows Red Team Lab%Persistence Techniques  
Windows Red Team Lab%Privilege Escalation Across Trusts  
Windows Red Team Lab%Defenses  
ARM Assembly%Course Introduction  
ARM Assembly%Getting Started  
ARM Assembly%Preliminaries and Hello World from Assembly  
ARM Assembly%Load and Store Overview and Immediate Offset Form  
ARM Assembly%Load and Store Register Form  
ARM Assembly%Load and Store Scaled Register Form  
ARM Assembly%Load and Store Multiple  
ARM Assembly%Push and Pop  
ARM Assembly%Introduction to Functions  
ARM Assembly%Function Calls From C Programs  
ARM Assembly%Introduction to Mathematical Operations  
ARM Assembly%Mathematical Operations: Adding, Subtracting, and Parallel Math  
ARM Assembly%Mathematical Operations: Multiplying and Dividing  
ARM Assembly%Introduction to Branching  
ARM Assembly%Simple branching example  
ARM Assembly%Case Statements in ARM Assembly  
ARM Assembly%Course Summary and Next Steps  
Windows System Programming: Fundamentals%Course Introduction  
Windows System Programming: Fundamentals%Module 1: Processes and Memory  
Windows System Programming: Fundamentals%Module 1: Threads  
Windows System Programming: Fundamentals%Module 1: System Architecture  
Windows System Programming: Fundamentals%Module 2: Application Basics  
Windows System Programming: Fundamentals%Module 2: Handling Errors  
Windows System Programming: Fundamentals%Module 2: 32-Bit vs 64-Bit  
Windows System Programming: Fundamentals%Module 2: Strings  
Windows System Programming: Fundamentals%Module 2: Structures  
Windows System Programming: Fundamentals%Module 2: Windows Numeric Version  
Windows System Programming: Fundamentals%Module 2: System Information  
Windows System Programming: Fundamentals%Module 3: Introduction  
Windows System Programming: Fundamentals%Module 3: Handles  
Windows System Programming: Fundamentals%Module 3: Sharing Objects  
Windows System Programming: Fundamentals%Module 3: Sharing by Name  
Windows System Programming: Fundamentals%Module 3: Private Namespaces  
Windows System Programming: Fundamentals%Module 3: Handle Inheritance  
Windows System Programming: Fundamentals%Module 3: Duplicate Handle  
Windows System Programming: Fundamentals%Module 3: User GDI Objects  
Linux Rootkits for Red-Blue Teams%Course Introduction  
Linux Rootkits for Red-Blue Teams%Lab Setup  
Linux Rootkits for Red-Blue Teams%Install Latest Kernel and Development Environment  
Linux Rootkits for Red-Blue Teams%Kernel Module Basics: Hello World  
Linux Rootkits for Red-Blue Teams%Kernel Module Basics: Messages with File, Function and Line Info  
Linux Rootkits for Red-Blue Teams%Kernel Module Basics: Printk and Console Log Levels  
Linux Rootkits for Red-Blue Teams%Kernel Module Basics: Input Parameters  
Linux Rootkits for Red-Blue Teams%Kernel Module Basics: Sysfs and Input Parameters  
Linux Rootkits for Red-Blue Teams%Linux Kernel Source Code Browsing Tools  
Linux Rootkits for Red-Blue Teams%Kernel Module: Process Information: PID, TGID and Parent Process  
Linux Rootkits for Red-Blue Teams%Kernel Module: Process Information: Threads  
Linux Rootkits for Red-Blue Teams%Kernel Module: Process Information: Binary Executable and Paths  
Linux Rootkits for Red-Blue Teams%Kernel Module: Process Information: List of Open Files and Sockets  
Linux Rootkits for Red-Blue Teams%Kernel Module: Process Information: Real and Effective Userid  
Linux Rootkits for Red-Blue Teams%Rootkit Behavior: Unremovable Module: No Module Exit Routine  
DevSecOps: Insecure Docker Registry%Insecure Docker Registry I   
DevSecOps: Insecure Docker Registry%Insecure Docker Registry II  
Reverse Engineering for ARM Platforms%Course Introduction  
Reverse Engineering for ARM Platforms%Getting Started  
Reverse Engineering for ARM Platforms%A Simple Program  
Reverse Engineering for ARM Platforms%An Introduction to Stack Buffer Overflows  
Reverse Engineering for ARM Platforms%Stack Buffer Overflow: Example Normal Execution  
Reverse Engineering for ARM Platforms%Stack Buffer Overflow: Getting Started with Abnormal Execution  
Reverse Engineering for ARM Platforms%Stack Buffer Overflow: More Abnormal Execution  
Reverse Engineering for ARM Platforms%Stack Buffer Overflow: Redirecting to a Specific Place  
